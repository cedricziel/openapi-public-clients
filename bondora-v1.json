{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Bondora API V1",
        "description": "Bondora API version 1",
        "contact": {
            "name": "Bondora",
            "url": "https://www.bondora.com",
            "email": "investor@bondora.com"
        },
        "license": {
            "name": "Bondora Terms of Use",
            "url": "https://www.bondora.com/en/terms"
        }
    },
    "host": "api.bondora.com",
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/v1/account/balance": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Gets your account balance information",
                "operationId": "Account_GetBalance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got info of your balance",
                        "schema": {
                            "$ref": "#/definitions/ApiResultMyAccountBalance"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/account/investments": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Gets list of your investments",
                "operationId": "Account_GetActive",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request.loanIssuedDateFrom",
                        "in": "query",
                        "description": "Loan issued start date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.loanIssuedDateTo",
                        "in": "query",
                        "description": "Loan issued start date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.principalMin",
                        "in": "query",
                        "description": "Remaining principal amount min",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.principalMax",
                        "in": "query",
                        "description": "Remaining principal amount max",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.interestMin",
                        "in": "query",
                        "description": "Interest rate min",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.interestMax",
                        "in": "query",
                        "description": "Interest rate max",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.lengthMax",
                        "in": "query",
                        "description": "Loan lenght min",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.lengthMin",
                        "in": "query",
                        "description": "Loan lenght max",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.latePrincipalAmountMin",
                        "in": "query",
                        "description": "Principal debt amount min",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.latePrincipalAmountMax",
                        "in": "query",
                        "description": "Principal debt amount max",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.debtOccuredOnFrom",
                        "in": "query",
                        "description": "Principal debt started date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.debtOccuredOnTo",
                        "in": "query",
                        "description": "Principal debt started date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.debtOccuredOnForSecondaryFrom",
                        "in": "query",
                        "description": "Interest debt started date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.debtOccuredOnForSecondaryTo",
                        "in": "query",
                        "description": "Interest debt started date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.defaultedDateFrom",
                        "in": "query",
                        "description": "Defaulted date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.defaultedDateTo",
                        "in": "query",
                        "description": "Defaulted date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.rescheduledFrom",
                        "in": "query",
                        "description": "Defaulted date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.rescheduledTo",
                        "in": "query",
                        "description": "Defaulted date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.soldDateFrom",
                        "in": "query",
                        "description": "When it was sold on Secondary market from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.soldDateTo",
                        "in": "query",
                        "description": "When it was sold on Secondary market to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.purchaseDateFrom",
                        "in": "query",
                        "description": "When you received the investment Auctions/Secondary market from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.purchaseDateTo",
                        "in": "query",
                        "description": "When you received the investment Auctions/Secondary market to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.nextPaymentDateTo",
                        "in": "query",
                        "description": "Next payment date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.nextPaymentDateFrom",
                        "in": "query",
                        "description": "Next payment date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.lastPaymentDateFrom",
                        "in": "query",
                        "description": "Last payment date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.lastPaymentDateTo",
                        "in": "query",
                        "description": "Last payment date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.countries",
                        "in": "query",
                        "description": "Two letter iso code for country of origin: EE, ES, FI",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.ratings",
                        "in": "query",
                        "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.creditScoreMin",
                        "in": "query",
                        "description": "Minimum credit score",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.creditScoreMax",
                        "in": "query",
                        "description": "Maximum credit score",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.userName",
                        "in": "query",
                        "description": "Borrower's username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request.loanStatusCode",
                        "in": "query",
                        "description": "Loan status code\r\n            <para>0 Reserved</para><para>2 Current</para><para>3 Cancelled</para><para>100 Overdue</para><para>5 60+ days overdue</para><para>4 Repaid</para><para>8 Released</para>",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.incomeVerificationStatus",
                        "in": "query",
                        "description": "Income verification type",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "request.loanDebtManagementStage",
                        "in": "query",
                        "description": "Latest debt management stage",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            7,
                            9,
                            14,
                            15,
                            16,
                            20,
                            22,
                            23,
                            24,
                            30,
                            31,
                            32,
                            33,
                            34,
                            35,
                            36,
                            37,
                            38,
                            39,
                            40,
                            41,
                            42,
                            43
                        ]
                    },
                    {
                        "name": "request.loanDebtManagementStageType",
                        "in": "query",
                        "description": "Latest debt management stage type",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            -1
                        ]
                    },
                    {
                        "name": "request.loanDebtManagementDateActiveFrom",
                        "in": "query",
                        "description": "Latest debt management date active from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.loanDebtManagementDateActiveTo",
                        "in": "query",
                        "description": "Latest debt management date active to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.auctionBidType",
                        "in": "query",
                        "description": "Auction bid type",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "request.salesStatus",
                        "in": "query",
                        "description": "Second market sale status\r\n            <para>NULL All active</para><para>0 Bought investments</para><para>1 Sold investments</para><para>2 Investment is on sale</para><para>3 Investment is not on sale</para>",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.isInRepayment",
                        "in": "query",
                        "description": "Search only active in repayment loans, StatusCodes (2, 5, 100)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "request.pageSize",
                        "in": "query",
                        "description": "Max items in result, up to 50000",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 50000,
                        "minimum": 1
                    },
                    {
                        "name": "request.pageNr",
                        "in": "query",
                        "description": "Result page nr",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got list of your investments",
                        "schema": {
                            "$ref": "#/definitions/ApiResultMyInvestments"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "Investments"
                        ]
                    }
                ]
            }
        },
        "/api/v1/eventlog": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Gets events that have been made with this application (related to current access token)",
                "operationId": "Account_GetEventLog",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request.eventDateFrom",
                        "in": "query",
                        "description": "Start datetime",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.eventDateTo",
                        "in": "query",
                        "description": "end datetime",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.eventType",
                        "in": "query",
                        "description": "Event type",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "request.ipAddress",
                        "in": "query",
                        "description": "IP address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request.pageSize",
                        "in": "query",
                        "description": "Max items in result, up to 20000",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 20000,
                        "minimum": 1
                    },
                    {
                        "name": "request.pageNr",
                        "in": "query",
                        "description": "Result page nr",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got list of events",
                        "schema": {
                            "$ref": "#/definitions/ApiResultEventLog"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/auctions": {
            "get": {
                "tags": [
                    "Auction"
                ],
                "summary": "Gets list of active Auctions",
                "operationId": "Auction_GetActive",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request.countries",
                        "in": "query",
                        "description": "Two letter iso code for country of origin: EE, ES, FI",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.ratings",
                        "in": "query",
                        "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.gender",
                        "in": "query",
                        "description": "Borrower's gender: Male 0, Female 1, Unknown 2",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.sumMin",
                        "in": "query",
                        "description": "Minimal loan amount",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.sumMax",
                        "in": "query",
                        "description": "Maximum loan amount",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.terms",
                        "in": "query",
                        "description": "Loan length: 3, 9, 12, 18, 24, 36, 48, 60 months",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.ageMin",
                        "in": "query",
                        "description": "Minimal age",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.ageMax",
                        "in": "query",
                        "description": "Maximum age",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.loanNumber",
                        "in": "query",
                        "description": "Loan number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.userName",
                        "in": "query",
                        "description": "Username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request.applicationDateFrom",
                        "in": "query",
                        "description": "Loan application started date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.applicationDateTo",
                        "in": "query",
                        "description": "Loan application started date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.creditScoreMin",
                        "in": "query",
                        "description": "Minimum credit score",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.creditScoreMax",
                        "in": "query",
                        "description": "Maximum credit score",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.creditScoresEeMini",
                        "in": "query",
                        "description": "Credit score for EE loans",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.interestMin",
                        "in": "query",
                        "description": "Minimum interest",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.interestMax",
                        "in": "query",
                        "description": "Maximum interest",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.incomeTotalMin",
                        "in": "query",
                        "description": "Minimal total income",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.incomeTotalMax",
                        "in": "query",
                        "description": "Maximum total income",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.modelVersion",
                        "in": "query",
                        "description": "Model version",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.expectedLossMin",
                        "in": "query",
                        "description": "Minimal expected loss",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.expectedLossMax",
                        "in": "query",
                        "description": "Maximum expected loss",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.listedOnUTCFrom",
                        "in": "query",
                        "description": "Date when auction was published from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.listedOnUTCTo",
                        "in": "query",
                        "description": "Date when auction was published to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.pageSize",
                        "in": "query",
                        "description": "Max items in result, up to 20000",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 20000,
                        "minimum": 1
                    },
                    {
                        "name": "request.pageNr",
                        "in": "query",
                        "description": "Result page nr",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got list of auctions",
                        "schema": {
                            "$ref": "#/definitions/ApiResultAuctions"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/auction/{id}": {
            "get": {
                "tags": [
                    "Auction"
                ],
                "summary": "Gets Auction info by auction identifier",
                "operationId": "Auction_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Auction's identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got Auction with specified ID",
                        "schema": {
                            "$ref": "#/definitions/ApiResultExtendedAuction"
                        }
                    },
                    "400": {
                        "description": "Auction ID is not provided"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "404": {
                        "description": "Auction with the provided ID was not found"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/bids": {
            "get": {
                "tags": [
                    "Bid"
                ],
                "summary": "Gets list of bids the investor has made.",
                "operationId": "Bid_GetBidSummaries",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request.bidStatusCode",
                        "in": "query",
                        "description": "Bid status code",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "request.startDate",
                        "in": "query",
                        "description": "Start date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.endDate",
                        "in": "query",
                        "description": "End date",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.pageSize",
                        "in": "query",
                        "description": "Max items in result, up to 20000",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 20000,
                        "minimum": 1
                    },
                    {
                        "name": "request.pageNr",
                        "in": "query",
                        "description": "Result page nr",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got list of user's bids",
                        "schema": {
                            "$ref": "#/definitions/ApiResultBids"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "BidsRead"
                        ]
                    }
                ]
            }
        },
        "/api/v1/bid": {
            "post": {
                "tags": [
                    "Bid"
                ],
                "summary": "Makes bid(s) into specified auction(s).",
                "operationId": "Bid_MakeBids",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "bidRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BidRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully accepted the bid(s). \r\n            It may take some time until the bid requests are created. \r\n            It will take more time until the actual bid(s) are made for the Auction(s).",
                        "schema": {
                            "$ref": "#/definitions/ApiResultMakeBids"
                        }
                    },
                    "400": {
                        "description": "Too many items. Max items 100"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "404": {
                        "description": "Auction with specified ID is not found"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "BidsEdit"
                        ]
                    }
                ]
            }
        },
        "/api/v1/bid/{id}": {
            "get": {
                "tags": [
                    "Bid"
                ],
                "summary": "Get the Bid",
                "operationId": "Bid_GetBid",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bid identificator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched the Bid",
                        "schema": {
                            "$ref": "#/definitions/ApiResultBid"
                        }
                    },
                    "400": {
                        "description": "No Bid id specified"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "403": {
                        "description": "Not allowed to get the Bid, because the bid is not owned by current user"
                    },
                    "404": {
                        "description": "Bid with specified ID is not found"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "BidsRead"
                        ]
                    }
                ]
            }
        },
        "/api/v1/bid/{id}/cancel": {
            "post": {
                "tags": [
                    "Bid"
                ],
                "summary": "Cancel the Bid",
                "operationId": "Bid_CancelBid",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bid identificator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully accepted the cancellation request for the Bid",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "400": {
                        "description": "No Bid id specified"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "403": {
                        "description": "The user has no rights to cancel the Bid"
                    },
                    "404": {
                        "description": "Bid with specified ID is not found"
                    },
                    "409": {
                        "description": "Can not cancel Bid."
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "BidsEdit"
                        ]
                    }
                ]
            }
        },
        "/api/v1/publicdataset": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Provides daily public dataset of all loan data that is not covered by the data protection laws.",
                "operationId": "Report_GetPublicDataset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request.loanIds",
                        "in": "query",
                        "description": "Specific loans to search",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.countries",
                        "in": "query",
                        "description": "Two letter iso code for country of origin: EE, ES, FI",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.ratings",
                        "in": "query",
                        "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.loanDateFrom",
                        "in": "query",
                        "description": "Loan start date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.loanDateTo",
                        "in": "query",
                        "description": "Loan start date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.pageSize",
                        "in": "query",
                        "description": "Max items in result, up to 10000",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 10000,
                        "minimum": 1
                    },
                    {
                        "name": "request.pageNr",
                        "in": "query",
                        "description": "Result page nr",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got list of loan public dataset items",
                        "schema": {
                            "$ref": "#/definitions/ApiResultPublicDataset"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/reports": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "List of all reports",
                "operationId": "Report_GetReportList",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got report list",
                        "schema": {
                            "$ref": "#/definitions/ApiResultReportList"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "ReportRead"
                        ]
                    }
                ]
            }
        },
        "/api/v1/report/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get report data for specified report identificator.",
                "operationId": "Report_GetReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got report data",
                        "schema": {
                            "$ref": "#/definitions/ApiResultReport"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "403": {
                        "description": "Not allowed to get the Report, because the Report is not owned by current user"
                    },
                    "404": {
                        "description": "Report with specified identificator was not found"
                    },
                    "409": {
                        "description": "Report type is not supported"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "ReportRead"
                        ]
                    }
                ]
            }
        },
        "/api/v1/report": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Request to generate specified report type for set period.",
                "operationId": "Report_GenerateReport",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully accepted request. \r\n            It may take some time until the reports are created.",
                        "schema": {
                            "$ref": "#/definitions/ApiResultCreateReport"
                        }
                    },
                    "400": {
                        "description": "PeriodEnd is too large (more than 20 years from today)"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "ReportCreate"
                        ]
                    }
                ]
            }
        },
        "/api/v1/secondarymarket": {
            "get": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Gets list of active secondary market items",
                "operationId": "SecondMarket_GetActive",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request.loanIssuedDateFrom",
                        "in": "query",
                        "description": "Loan issued start date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.loanIssuedDateTo",
                        "in": "query",
                        "description": "Loan issued start date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.principalMin",
                        "in": "query",
                        "description": "Remaining principal amount min",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.principalMax",
                        "in": "query",
                        "description": "Remaining principal amount max",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.interestMin",
                        "in": "query",
                        "description": "Interest rate min",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.interestMax",
                        "in": "query",
                        "description": "Interest rate max",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.lengthMax",
                        "in": "query",
                        "description": "Loan lenght min",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.lengthMin",
                        "in": "query",
                        "description": "Loan lenght max",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.hasDebt",
                        "in": "query",
                        "description": "Is overdue",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "request.loanStatusCode",
                        "in": "query",
                        "description": "Loan status code\r\n            <para>2 Current</para><para>100 Overdue</para><para>5 60+ days overdue</para>",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.loanDebtManagementStageType",
                        "in": "query",
                        "description": "Latest debt management stage type",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            -1
                        ]
                    },
                    {
                        "name": "request.loanDebtManagementDateActiveFrom",
                        "in": "query",
                        "description": "Latest debt management date active from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.loanDebtManagementDateActiveTo",
                        "in": "query",
                        "description": "Latest debt management date active to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.latePrincipalAmountMin",
                        "in": "query",
                        "description": "Principal debt amount min",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.latePrincipalAmountMax",
                        "in": "query",
                        "description": "Principal debt amount max",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.priceMin",
                        "in": "query",
                        "description": "Price amount min",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.priceMax",
                        "in": "query",
                        "description": "Price amount max",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.useOfLoan",
                        "in": "query",
                        "description": "Use of loan",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            101,
                            102,
                            103,
                            104,
                            105,
                            106,
                            107,
                            108,
                            109,
                            110,
                            201,
                            202,
                            203,
                            204,
                            205,
                            206,
                            207,
                            208,
                            209,
                            210,
                            211,
                            -1
                        ]
                    },
                    {
                        "name": "request.hasNewSchedule",
                        "in": "query",
                        "description": "Has been rescheduled",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "request.countries",
                        "in": "query",
                        "description": "Two letter iso code for country of origin: EE, ES, FI",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.ratings",
                        "in": "query",
                        "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "request.creditScoreMin",
                        "in": "query",
                        "description": "Minimum credit score",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.creditScoreMax",
                        "in": "query",
                        "description": "Maximum credit score",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.userName",
                        "in": "query",
                        "description": "Borrower's username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request.gender",
                        "in": "query",
                        "description": "Borrower's gender: Male 0, Female 1, Unknown 2",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.ageMin",
                        "in": "query",
                        "description": "Minimal age",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.ageMax",
                        "in": "query",
                        "description": "Maximum age",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request.incomeVerificationStatus",
                        "in": "query",
                        "description": "Income verification type",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "request.showMyItems",
                        "in": "query",
                        "description": "Can find your own items from market: Value Null = ALL, True = only your items, False = other user items",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "request.auctionId",
                        "in": "query",
                        "description": "Can find specific auction from market",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request.listedOnDateFrom",
                        "in": "query",
                        "description": "Date when item was published from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.listedOnDateTo",
                        "in": "query",
                        "description": "Date when item was published to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.debtOccuredOnFrom",
                        "in": "query",
                        "description": "Principal debt started date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.debtOccuredOnTo",
                        "in": "query",
                        "description": "Principal debt started date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.debtOccuredOnForSecondaryFrom",
                        "in": "query",
                        "description": "Interest debt started date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.debtOccuredOnForSecondaryTo",
                        "in": "query",
                        "description": "Interest debt started date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.defaultedDateFrom",
                        "in": "query",
                        "description": "Defaulted date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.defaultedDateTo",
                        "in": "query",
                        "description": "Defaulted date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.rescheduledFrom",
                        "in": "query",
                        "description": "Rescheduled date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.rescheduledTo",
                        "in": "query",
                        "description": "Rescheduled date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.lastPaymentDateFrom",
                        "in": "query",
                        "description": "Last payment date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.lastPaymentDateTo",
                        "in": "query",
                        "description": "Last payment date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.nextPaymentDateFrom",
                        "in": "query",
                        "description": "Next payment date from",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.nextPaymentDateTo",
                        "in": "query",
                        "description": "Next payment date to",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "request.desiredDiscountRateMin",
                        "in": "query",
                        "description": "Minimal DesiredDiscountRate",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.desiredDiscountRateMax",
                        "in": "query",
                        "description": "Maximal DesiredDiscountRate",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.xirrMin",
                        "in": "query",
                        "description": "Minimal Xirr",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.xirrMax",
                        "in": "query",
                        "description": "Maximal Xirr",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "request.pageSize",
                        "in": "query",
                        "description": "Max items in result, up to 100000",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 100000,
                        "minimum": 1
                    },
                    {
                        "name": "request.pageNr",
                        "in": "query",
                        "description": "Result page nr",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got list of secondary market items",
                        "schema": {
                            "$ref": "#/definitions/ApiResultSecondMarket"
                        }
                    },
                    "401": {
                        "description": "User is not Authorized"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/loanpart/{id}": {
            "get": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Gets LoanPartDetails info by identifier",
                "operationId": "SecondMarket_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "LoanPartDetails's identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got LoanPartDetails with specified ID",
                        "schema": {
                            "$ref": "#/definitions/ApiResultLoanPartDetails"
                        }
                    },
                    "400": {
                        "description": "LoanPart ID is not provided"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "404": {
                        "description": "LoanPart with the provided ID was not found"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/loanpart/list": {
            "post": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Gets LoanPartDetails info by identifiers in a list (up to 1000 items).",
                "operationId": "SecondMarket_GetList",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "LoanPartDetails identifiers list.\r\n            This endpoint supports both GET and POST methods.\r\n            If using this endpoint with the GET method the request data must be sent with the request body, even though it is a GET request.\r\n            The \"Content-Type\" header must be set so the server knows how to decode the data.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoanPartDetailsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got LoanPartDetails with specified ID",
                        "schema": {
                            "$ref": "#/definitions/ApiResultLoanPartDetailsList"
                        }
                    },
                    "400": {
                        "description": "LoanPart ID is not provided"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "404": {
                        "description": "LoanPart with the provided ID was not found"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/secondarymarket/buy": {
            "post": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Buy loans from secondary market.",
                "operationId": "SecondMarket_Buy",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "buyRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecondMarketBuyRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully accepted buy request.",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "400": {
                        "description": "Too many items. Max items 100"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "403": {
                        "description": "User has no rights"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "409": {
                        "description": "Investment cannot be bought"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "SmBuy"
                        ]
                    }
                ]
            }
        },
        "/api/v1/secondarymarket/sell": {
            "post": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Sell your loans to secondary market.",
                "operationId": "SecondMarket_Sell",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "saleRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecondMarketSaleRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully accepted sell request.",
                        "schema": {
                            "$ref": "#/definitions/ApiResultSecondMarketSale"
                        }
                    },
                    "400": {
                        "description": "Too many items. Max items 100"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "403": {
                        "description": "User has no rights"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "409": {
                        "description": "Investment cannot be sold"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "SmSell"
                        ]
                    }
                ]
            }
        },
        "/api/v1/secondarymarket/{id}/cancel": {
            "post": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Remove your loans from secondary market.",
                "operationId": "SecondMarket_Cancel",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully accepted cancel request.",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "403": {
                        "description": "User has no rights"
                    },
                    "409": {
                        "description": "Cannot cancel item"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "SmSell"
                        ]
                    }
                ]
            }
        },
        "/api/v1/secondarymarket/cancel": {
            "post": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Remove your loans from secondary market.",
                "operationId": "SecondMarket_CancelMultiple",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cancelRequest",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecondMarketCancelRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successfully accepted cancel request.",
                        "schema": {
                            "$ref": "#/definitions/ApiResult"
                        }
                    },
                    "400": {
                        "description": "Too many items. Max items 100"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "403": {
                        "description": "User has no rights"
                    },
                    "409": {
                        "description": "Cannot cancel item"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "SmSell"
                        ]
                    }
                ]
            }
        },
        "/api/v1/secondarymarket/{id}": {
            "get": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Get the secondary market item summary",
                "operationId": "SecondMarket_GetItem",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SecondaryMarket item identificator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched the SecondaryMarket item",
                        "schema": {
                            "$ref": "#/definitions/ApiResultSecondMarketItemSummary"
                        }
                    },
                    "400": {
                        "description": "No id specified"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "404": {
                        "description": "SecondaryMarket item with specified ID is not found"
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/secondarymarket/list": {
            "post": {
                "tags": [
                    "SecondMarket"
                ],
                "summary": "Get the secondary market item summaries in a list",
                "operationId": "SecondMarket_GetItemList",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "SecondaryMarket item identificators.\r\n            This endpoint supports both GET and POST methods.\r\n            If using this endpoint with the GET method the request data must be sent with the request body, even though it is a GET request.\r\n            The \"Content-Type\" header must be set so the server knows how to decode the data.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecondMarketListingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched the SecondaryMarket item",
                        "schema": {
                            "$ref": "#/definitions/ApiResultSecondMarketItemSummaryList"
                        }
                    },
                    "400": {
                        "description": "No ids specified"
                    },
                    "401": {
                        "description": "User is not Authorized"
                    },
                    "404": {
                        "description": "SecondaryMarket item with specified ID is not found"
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "ApiResultMyAccountBalance": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/definitions/MyAccountBalance",
                    "description": "The payload of the response. Type depends on the API request."
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "MyAccountBalance": {
            "description": "My account balance information",
            "type": "object",
            "properties": {
                "Balance": {
                    "format": "double",
                    "description": "Account balance",
                    "type": "number"
                },
                "Reserved": {
                    "format": "double",
                    "description": "Account reserved amount",
                    "type": "number"
                },
                "BidRequestAmount": {
                    "format": "double",
                    "description": "Api pending auction bid request amount",
                    "type": "number"
                },
                "TotalAvailable": {
                    "format": "double",
                    "description": "Available balance",
                    "type": "number",
                    "readOnly": true
                },
                "GoGrowAccounts": {
                    "description": "List of Go and Grow accounts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoGrowAccount"
                    }
                }
            }
        },
        "ApiError": {
            "description": "API Error object. Describes the error that occured.",
            "required": [
                "Code",
                "Message"
            ],
            "type": "object",
            "properties": {
                "Code": {
                    "format": "int32",
                    "description": "Code of the error. For machine reading.",
                    "type": "integer"
                },
                "Message": {
                    "description": "The error message for human reading.",
                    "type": "string"
                },
                "Details": {
                    "description": "Error details, if any. \r\n            For example the non valid Field's name or the Id of the failed object.",
                    "type": "string"
                }
            }
        },
        "GoGrowAccount": {
            "description": "Go and Grow account",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of your Go and Grow",
                    "type": "string"
                },
                "NetDeposits": {
                    "format": "double",
                    "description": "TotalDeposits - TotalWithdrawals",
                    "type": "number",
                    "readOnly": true
                },
                "NetProfit": {
                    "format": "double",
                    "description": "Everything you have gained from Go and Grow",
                    "type": "number",
                    "readOnly": true
                },
                "TotalSaved": {
                    "format": "double",
                    "description": "Total Go and Grow value",
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "MyInvestmentsRequest": {
            "description": "Request object for filtering my investments",
            "type": "object",
            "properties": {
                "LoanIssuedDateFrom": {
                    "format": "date-time",
                    "description": "Loan issued start date from",
                    "type": "string"
                },
                "LoanIssuedDateTo": {
                    "format": "date-time",
                    "description": "Loan issued start date to",
                    "type": "string"
                },
                "PrincipalMin": {
                    "format": "double",
                    "description": "Remaining principal amount min",
                    "type": "number"
                },
                "PrincipalMax": {
                    "format": "double",
                    "description": "Remaining principal amount max",
                    "type": "number"
                },
                "InterestMin": {
                    "format": "double",
                    "description": "Interest rate min",
                    "type": "number"
                },
                "InterestMax": {
                    "format": "double",
                    "description": "Interest rate max",
                    "type": "number"
                },
                "LengthMax": {
                    "format": "int32",
                    "description": "Loan lenght min",
                    "type": "integer"
                },
                "LengthMin": {
                    "format": "int32",
                    "description": "Loan lenght max",
                    "type": "integer"
                },
                "LatePrincipalAmountMin": {
                    "format": "double",
                    "description": "Principal debt amount min",
                    "type": "number"
                },
                "LatePrincipalAmountMax": {
                    "format": "double",
                    "description": "Principal debt amount max",
                    "type": "number"
                },
                "DebtOccuredOnFrom": {
                    "format": "date-time",
                    "description": "Principal debt started date from",
                    "type": "string"
                },
                "DebtOccuredOnTo": {
                    "format": "date-time",
                    "description": "Principal debt started date to",
                    "type": "string"
                },
                "DebtOccuredOnForSecondaryFrom": {
                    "format": "date-time",
                    "description": "Interest debt started date from",
                    "type": "string"
                },
                "DebtOccuredOnForSecondaryTo": {
                    "format": "date-time",
                    "description": "Interest debt started date to",
                    "type": "string"
                },
                "DefaultedDateFrom": {
                    "format": "date-time",
                    "description": "Defaulted date from",
                    "type": "string"
                },
                "DefaultedDateTo": {
                    "format": "date-time",
                    "description": "Defaulted date to",
                    "type": "string"
                },
                "RescheduledFrom": {
                    "format": "date-time",
                    "description": "Defaulted date from",
                    "type": "string"
                },
                "RescheduledTo": {
                    "format": "date-time",
                    "description": "Defaulted date to",
                    "type": "string"
                },
                "SoldDateFrom": {
                    "format": "date-time",
                    "description": "When it was sold on Secondary market from",
                    "type": "string"
                },
                "SoldDateTo": {
                    "format": "date-time",
                    "description": "When it was sold on Secondary market to",
                    "type": "string"
                },
                "PurchaseDateFrom": {
                    "format": "date-time",
                    "description": "When you received the investment Auctions/Secondary market from",
                    "type": "string"
                },
                "PurchaseDateTo": {
                    "format": "date-time",
                    "description": "When you received the investment Auctions/Secondary market to",
                    "type": "string"
                },
                "NextPaymentDateTo": {
                    "format": "date-time",
                    "description": "Next payment date to",
                    "type": "string"
                },
                "NextPaymentDateFrom": {
                    "format": "date-time",
                    "description": "Next payment date from",
                    "type": "string"
                },
                "LastPaymentDateFrom": {
                    "format": "date-time",
                    "description": "Last payment date from",
                    "type": "string"
                },
                "LastPaymentDateTo": {
                    "format": "date-time",
                    "description": "Last payment date to",
                    "type": "string"
                },
                "Countries": {
                    "description": "Two letter iso code for country of origin: EE, ES, FI",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Ratings": {
                    "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CreditScoreMin": {
                    "format": "int32",
                    "description": "Minimum credit score",
                    "type": "integer"
                },
                "CreditScoreMax": {
                    "format": "int32",
                    "description": "Maximum credit score",
                    "type": "integer"
                },
                "UserName": {
                    "description": "Borrower's username",
                    "type": "string"
                },
                "LoanStatusCode": {
                    "description": "Loan status code\r\n            <para>0 Reserved</para><para>2 Current</para><para>3 Cancelled</para><para>100 Overdue</para><para>5 60+ days overdue</para><para>4 Repaid</para><para>8 Released</para>",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "IncomeVerificationStatus": {
                    "format": "int32",
                    "description": "Income verification type",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "LoanDebtManagementStage": {
                    "format": "int32",
                    "description": "Latest debt management stage",
                    "enum": [
                        1,
                        2,
                        7,
                        9,
                        14,
                        15,
                        16,
                        20,
                        22,
                        23,
                        24,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "type": "integer"
                },
                "LoanDebtManagementStageType": {
                    "format": "int32",
                    "description": "Latest debt management stage type",
                    "enum": [
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "LoanDebtManagementDateActiveFrom": {
                    "format": "date-time",
                    "description": "Latest debt management date active from",
                    "type": "string"
                },
                "LoanDebtManagementDateActiveTo": {
                    "format": "date-time",
                    "description": "Latest debt management date active to",
                    "type": "string"
                },
                "AuctionBidType": {
                    "format": "int32",
                    "description": "Auction bid type",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "SalesStatus": {
                    "format": "int32",
                    "description": "Second market sale status\r\n            <para>NULL All active</para><para>0 Bought investments</para><para>1 Sold investments</para><para>2 Investment is on sale</para><para>3 Investment is not on sale</para>",
                    "type": "integer"
                },
                "IsInRepayment": {
                    "description": "Search only active in repayment loans, StatusCodes (2, 5, 100)",
                    "type": "boolean"
                },
                "PageSize": {
                    "format": "int32",
                    "description": "Max items in result, up to 50000",
                    "maximum": 50000,
                    "minimum": 1,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Result page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "ApiResultMyInvestments": {
            "required": [
                "TotalCount",
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "PageSize": {
                    "format": "int32",
                    "description": "Requested Max items in result",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Requested page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "TotalCount": {
                    "format": "int32",
                    "description": "Total number of items found",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MyInvestmentItem"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "MyInvestmentItem": {
            "description": "MyInvestments list item's information",
            "type": "object",
            "properties": {
                "LoanPartId": {
                    "description": "LoanPart unique identifier",
                    "type": "string"
                },
                "Amount": {
                    "format": "double",
                    "description": "Investment amount",
                    "type": "number"
                },
                "AuctionId": {
                    "description": "Auction unique identifier",
                    "type": "string"
                },
                "AuctionName": {
                    "description": "Auction name",
                    "type": "string"
                },
                "AuctionNumber": {
                    "format": "int32",
                    "description": "Auction number",
                    "type": "integer",
                    "readOnly": true
                },
                "AuctionBidNumber": {
                    "format": "int32",
                    "description": "Auction bid number",
                    "type": "integer",
                    "readOnly": true
                },
                "InvestmentNumber": {
                    "type": "string"
                },
                "AuctionBidType": {
                    "format": "int32",
                    "description": "Auction bid type",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "Country": {
                    "description": "Residency of the borrower",
                    "type": "string"
                },
                "CreditScore": {
                    "format": "double",
                    "description": "<para>\r\n  1000 No previous payments problems</para>\r\n<para>\r\n  900 Payments problems finished 24-36 months ago</para>\r\n<para>\r\n  800 Payments problems finished 12-24 months ago</para>\r\n<para>\r\n  700 Payments problems finished 6-12 months ago</para>\r\n<para>\r\n  600 Payment problems finished &lt;6 months ago</para>\r\n<para>\r\n  500 Active payment problems</para>",
                    "type": "number"
                },
                "CreditScoreEsMicroL": {
                    "description": "A score that is specifically designed for risk classifying subprime borrowers (defined by Equifax as borrowers that do not have access to bank loans). \r\n            A measure of the probability of default one month ahead.\r\n            <para>The score is given on a 10-grade scale, from the best score to the worst:</para><para>M1, M2, M3, M4, M5, M6, M7, M8, M9, M10</para>",
                    "type": "string"
                },
                "CreditScoreEsEquifaxRisk": {
                    "description": "Generic score for the loan applicants that do not have active past due operations in ASNEF.\r\n            A measure of the probability of default one year ahead. \r\n            The score is given on a 6-grade scale.\r\n            <para>AAA Very low</para><para>AA Low</para><para>A Average</para><para>B Average High</para><para>C High</para><para>D Very High</para>",
                    "type": "string"
                },
                "CreditScoreFiAsiakasTietoRiskGrade": {
                    "description": "Credit Scoring model for Finnish Asiakastieto\r\n            <para>RL1 Very low risk 01-20</para><para>RL2 Low risk 21-40</para><para>RL3 Average risk 41-60</para><para>RL4 Big risk 61-80</para><para>RL5 Huge risk 81-100</para>",
                    "type": "string"
                },
                "CreditScoreEeMini": {
                    "description": "Credit scoring for Estonian loans\r\n            <para>1000 No previous payments problems</para><para>900 Payments problems finished 24-36 months ago</para><para>800 Payments problems finished 12-24 months ago</para><para>700 Payments problems finished 6-12 months ago</para><para>600 Payment problems finished &lt;6 months ago</para><para>500 Active payment problems</para>",
                    "type": "string"
                },
                "Rating": {
                    "description": "Bondora Rating issued by the Rating model",
                    "type": "string"
                },
                "Interest": {
                    "format": "double",
                    "description": "Interest rate",
                    "type": "number"
                },
                "UseOfLoan": {
                    "format": "int32",
                    "description": "Use of loan",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeVerificationStatus": {
                    "format": "int32",
                    "description": "Income verification type",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "LoanId": {
                    "description": "Loan unique identifier",
                    "type": "string"
                },
                "LoanStatusCode": {
                    "format": "int32",
                    "description": "Loan status code\r\n            <para>0 Reserved</para><para>2 Current</para><para>3 Cancelled</para><para>100 Overdue</para><para>5 60+ days overdue</para><para>4 Repaid</para><para>8 Released</para>",
                    "type": "integer"
                },
                "LoanStatusActiveFrom": {
                    "format": "date-time",
                    "description": "Loan status active from",
                    "type": "string"
                },
                "UserName": {
                    "description": "Borrower's username",
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "description": "Borrower's Gender",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "description": "Borrower's date of birth",
                    "type": "string"
                },
                "SignedDate": {
                    "format": "date-time",
                    "description": "Loan issued date",
                    "type": "string"
                },
                "ReScheduledOn": {
                    "format": "date-time",
                    "description": "Last rescheduling date",
                    "type": "string"
                },
                "DebtOccuredOn": {
                    "format": "date-time",
                    "description": "Date and time when the principal part of the payment is overdue (PrincipalLateAmount is greater than zero).",
                    "type": "string"
                },
                "DebtOccuredOnForSecondary": {
                    "format": "date-time",
                    "description": "Date and time when loan part payment is overdue (principal, interest or penalty) aka when the dept occured for the loan part (LateAmountTotal is greater than zero).",
                    "type": "string"
                },
                "LoanDuration": {
                    "format": "int32",
                    "description": "Loan original lenght",
                    "type": "integer"
                },
                "NextPaymentNr": {
                    "format": "int32",
                    "description": "Next scheduled payment number",
                    "type": "integer"
                },
                "NextPaymentDate": {
                    "format": "date-time",
                    "description": "Next scheduled payment date",
                    "type": "string"
                },
                "NextPaymentSum": {
                    "format": "double",
                    "description": "Next scheduled payment amount",
                    "type": "number"
                },
                "NrOfScheduledPayments": {
                    "format": "int32",
                    "description": "Total number of scheduled payments",
                    "type": "integer"
                },
                "LastPaymentDate": {
                    "format": "date-time",
                    "description": "Last payment date",
                    "type": "string"
                },
                "PrincipalRepaid": {
                    "format": "double",
                    "description": "Total principal repaid amount",
                    "type": "number"
                },
                "InterestRepaid": {
                    "format": "double",
                    "description": "Total interest repaid amount",
                    "type": "number"
                },
                "LateAmountPaid": {
                    "format": "double",
                    "description": "Total late charges paid amount",
                    "type": "number"
                },
                "PrincipalRemaining": {
                    "format": "double",
                    "description": "Remaining principal amount",
                    "type": "number",
                    "readOnly": true
                },
                "PrincipalLateAmount": {
                    "format": "double",
                    "description": "Principal debt amount",
                    "type": "number"
                },
                "InterestLateAmount": {
                    "format": "double",
                    "description": "Interest debt amount",
                    "type": "number"
                },
                "PenaltyLateAmount": {
                    "format": "double",
                    "description": "Late charges debt amount",
                    "type": "number"
                },
                "LateAmountTotal": {
                    "format": "double",
                    "description": "Late amount total",
                    "type": "number",
                    "readOnly": true
                },
                "PrincipalWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of principal written off",
                    "type": "number"
                },
                "InterestWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of interest written off",
                    "type": "number"
                },
                "PenaltyWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of penalty written off",
                    "type": "number"
                },
                "DebtServicingCostMainAmount": {
                    "format": "double",
                    "description": "Total amount of principal debt servicing cost",
                    "type": "number"
                },
                "DebtServicingCostInterestAmount": {
                    "format": "double",
                    "description": "Total amount of interest debt servicing cost",
                    "type": "number"
                },
                "DebtServicingCostPenaltyAmount": {
                    "format": "double",
                    "description": "Total amount of penalty debt servicing cost",
                    "type": "number"
                },
                "PurchaseDate": {
                    "format": "date-time",
                    "description": "Date when investment was made or purchased from second market",
                    "type": "string"
                },
                "SoldDate": {
                    "format": "date-time",
                    "description": "Investment selling date",
                    "type": "string"
                },
                "PurchasePrice": {
                    "format": "double",
                    "description": "Investment amount or secondary market purchase price",
                    "type": "number"
                },
                "SalePrice": {
                    "format": "double",
                    "description": "SecondMarket sale price",
                    "type": "number"
                },
                "ListedInSecondMarketOn": {
                    "format": "date-time",
                    "description": "Date when item was listed on secondary market",
                    "type": "string"
                },
                "LatestDebtManagementStage": {
                    "format": "int32",
                    "description": "Latest debt management stage",
                    "enum": [
                        1,
                        2,
                        7,
                        9,
                        14,
                        15,
                        16,
                        20,
                        22,
                        23,
                        24,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "type": "integer"
                },
                "LatestDebtManagementSubStage": {
                    "format": "int32",
                    "description": "",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        36,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "type": "integer"
                },
                "LatestDebtManagementStageType": {
                    "format": "int32",
                    "description": "Latest debt management stage type",
                    "enum": [
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "LatestDebtManagementDate": {
                    "format": "date-time",
                    "description": "Latest debt management date",
                    "type": "string"
                },
                "NoteLoanTransfersMainAmount": {
                    "format": "double",
                    "description": "Note owner received loan transfers principal amount",
                    "type": "number"
                },
                "NoteLoanTransfersInterestAmount": {
                    "format": "double",
                    "description": "Note owner received loan transfers interest amount",
                    "type": "number"
                },
                "NoteLoanLateChargesPaid": {
                    "format": "double",
                    "description": "Note owner received loan transfers penalties amount",
                    "type": "number"
                },
                "NoteLoanTransfersEarningsAmount": {
                    "format": "double",
                    "description": "Note owner received loan transfers earned interest, penalties total amount",
                    "type": "number"
                },
                "NoteLoanTransfersTotalRepaimentsAmount": {
                    "format": "double",
                    "description": "Note owner received loan transfers total amount",
                    "type": "number"
                },
                "BoughtFromId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "EventLogRequest": {
            "description": "Request object for filtering event log",
            "type": "object",
            "properties": {
                "EventDateFrom": {
                    "format": "date-time",
                    "description": "Start datetime",
                    "type": "string"
                },
                "EventDateTo": {
                    "format": "date-time",
                    "description": "end datetime",
                    "type": "string"
                },
                "EventType": {
                    "format": "int32",
                    "description": "Event type",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                },
                "IpAddress": {
                    "description": "IP address",
                    "type": "string"
                },
                "PageSize": {
                    "format": "int32",
                    "description": "Max items in result, up to 20000",
                    "maximum": 20000,
                    "minimum": 1,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Result page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "ApiResultEventLog": {
            "required": [
                "TotalCount",
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "PageSize": {
                    "format": "int32",
                    "description": "Requested Max items in result",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Requested page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "TotalCount": {
                    "format": "int32",
                    "description": "Total number of items found",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventLogItem"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "EventLogItem": {
            "description": "EventLog list item's information",
            "type": "object",
            "properties": {
                "EventDate": {
                    "format": "date-time",
                    "description": "Event date",
                    "type": "string"
                },
                "EventType": {
                    "format": "int32",
                    "description": "Event type",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                },
                "IpAddress": {
                    "description": "IP address",
                    "type": "string"
                },
                "Data": {
                    "description": "Request data JSON format",
                    "type": "string"
                }
            }
        },
        "AuctionRequest": {
            "description": "Request object for filtering auctions",
            "type": "object",
            "properties": {
                "Countries": {
                    "description": "Two letter iso code for country of origin: EE, ES, FI",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Ratings": {
                    "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Gender": {
                    "format": "int32",
                    "description": "Borrower's gender: Male 0, Female 1, Unknown 2",
                    "type": "integer"
                },
                "SumMin": {
                    "format": "int32",
                    "description": "Minimal loan amount",
                    "type": "integer"
                },
                "SumMax": {
                    "format": "int32",
                    "description": "Maximum loan amount",
                    "type": "integer"
                },
                "Terms": {
                    "description": "Loan length: 3, 9, 12, 18, 24, 36, 48, 60 months",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "AgeMin": {
                    "format": "int32",
                    "description": "Minimal age",
                    "type": "integer"
                },
                "AgeMax": {
                    "format": "int32",
                    "description": "Maximum age",
                    "type": "integer"
                },
                "LoanNumber": {
                    "format": "int32",
                    "description": "Loan number",
                    "type": "integer"
                },
                "UserName": {
                    "description": "Username",
                    "type": "string"
                },
                "ApplicationDateFrom": {
                    "format": "date-time",
                    "description": "Loan application started date from",
                    "type": "string"
                },
                "ApplicationDateTo": {
                    "format": "date-time",
                    "description": "Loan application started date to",
                    "type": "string"
                },
                "CreditScoreMin": {
                    "format": "int32",
                    "description": "Minimum credit score",
                    "type": "integer"
                },
                "CreditScoreMax": {
                    "format": "int32",
                    "description": "Maximum credit score",
                    "type": "integer"
                },
                "CreditScoresEeMini": {
                    "description": "Credit score for EE loans",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "InterestMin": {
                    "format": "double",
                    "description": "Minimum interest",
                    "type": "number"
                },
                "InterestMax": {
                    "format": "double",
                    "description": "Maximum interest",
                    "type": "number"
                },
                "IncomeTotalMin": {
                    "format": "double",
                    "description": "Minimal total income",
                    "type": "number"
                },
                "IncomeTotalMax": {
                    "format": "double",
                    "description": "Maximum total income",
                    "type": "number"
                },
                "ModelVersion": {
                    "format": "int32",
                    "description": "Model version",
                    "type": "integer"
                },
                "ExpectedLossMin": {
                    "format": "double",
                    "description": "Minimal expected loss",
                    "type": "number"
                },
                "ExpectedLossMax": {
                    "format": "double",
                    "description": "Maximum expected loss",
                    "type": "number"
                },
                "ListedOnUTCFrom": {
                    "format": "date-time",
                    "description": "Date when auction was published from",
                    "type": "string"
                },
                "ListedOnUTCTo": {
                    "format": "date-time",
                    "description": "Date when auction was published to",
                    "type": "string"
                },
                "PageSize": {
                    "format": "int32",
                    "description": "Max items in result, up to 20000",
                    "maximum": 20000,
                    "minimum": 1,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Result page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "ApiResultAuctions": {
            "description": "Response for Auctions endpoint",
            "required": [
                "TotalCount",
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "PageSize": {
                    "format": "int32",
                    "description": "Requested Max items in result",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Requested page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "TotalCount": {
                    "format": "int32",
                    "description": "Total number of items found",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Auction"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "Auction": {
            "description": "Auction related data",
            "type": "object",
            "properties": {
                "LoanId": {
                    "description": "Unique loan identificator",
                    "type": "string"
                },
                "AuctionId": {
                    "description": "Unique auction identificator",
                    "type": "string"
                },
                "LoanNumber": {
                    "format": "int32",
                    "description": "Number of the loan",
                    "type": "integer"
                },
                "UserName": {
                    "description": "Customer's Bondora username",
                    "type": "string"
                },
                "NewCreditCustomer": {
                    "format": "int32",
                    "description": "Did the customer have prior credit history in Bondora\r\n            <para>0 Customer had at least 3 months of credit history in Bondora</para><para>1 No prior credit history in Bondora</para>",
                    "type": "integer"
                },
                "LoanApplicationStartedDate": {
                    "format": "date-time",
                    "description": "Date when the loan application was started",
                    "type": "string"
                },
                "PlannedCloseDate": {
                    "format": "date-time",
                    "description": "Date and time when the auction is closed, if it's not funded 100% before that.\r\n            Auction will be closed before that, if auction is funded 100%.",
                    "type": "string"
                },
                "ApplicationSignedHour": {
                    "format": "int32",
                    "description": "Hour of signing the loan application",
                    "type": "integer"
                },
                "ApplicationSignedWeekday": {
                    "format": "int32",
                    "description": "Weekday of signing the loan application",
                    "type": "integer"
                },
                "VerificationType": {
                    "format": "int32",
                    "description": "Verification type",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "LanguageCode": {
                    "format": "int32",
                    "description": "Two letter language code",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "type": "integer"
                },
                "Age": {
                    "format": "int32",
                    "description": "Age of the borrower (years)",
                    "type": "integer"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "description": "Borrower's date of birth",
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "description": "Gender",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "Country": {
                    "description": "Residency of the borrower",
                    "type": "string"
                },
                "CreditScoreEsMicroL": {
                    "description": "A score that is specifically designed for risk classifying subprime borrowers (defined by Equifax as borrowers that do not have access to bank loans). \r\n            A measure of the probability of default one month ahead.\r\n            <para>The score is given on a 10-grade scale, from the best score to the worst:</para><para>M1, M2, M3, M4, M5, M6, M7, M8, M9, M10</para>",
                    "type": "string"
                },
                "CreditScoreEsEquifaxRisk": {
                    "description": "Generic score for the loan applicants that do not have active past due operations in ASNEF.\r\n            A measure of the probability of default one year ahead. \r\n            The score is given on a 6-grade scale.\r\n            <para>AAA Very low</para><para>AA Low</para><para>A Average</para><para>B Average High</para><para>C High</para><para>D Very High</para>",
                    "type": "string"
                },
                "CreditScoreFiAsiakasTietoRiskGrade": {
                    "description": "Credit Scoring model for Finnish Asiakastieto\r\n            <para>RL1 Very low risk 01-20</para><para>RL2 Low risk 21-40</para><para>RL3 Average risk 41-60</para><para>RL4 Big risk 61-80</para><para>RL5 Huge risk 81-100</para>",
                    "type": "string"
                },
                "CreditScoreEeMini": {
                    "description": "Credit scoring for Estonian loans\r\n            <para>1000 No previous payments problems</para><para>900 Payments problems finished 24-36 months ago</para><para>800 Payments problems finished 12-24 months ago</para><para>700 Payments problems finished 6-12 months ago</para><para>600 Payment problems finished &lt;6 months ago</para><para>500 Active payment problems</para>",
                    "type": "string"
                },
                "AppliedAmount": {
                    "format": "double",
                    "description": "The amount borrower applied for originally",
                    "type": "number"
                },
                "Interest": {
                    "format": "double",
                    "description": "Maximum interest rate accepted in the loan application",
                    "type": "number"
                },
                "LoanDuration": {
                    "format": "int32",
                    "description": "The loan term",
                    "type": "integer"
                },
                "County": {
                    "description": "County of the borrower",
                    "type": "string"
                },
                "City": {
                    "description": "City of the borrower",
                    "type": "string"
                },
                "Education": {
                    "format": "int32",
                    "description": "Education",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        -1
                    ],
                    "type": "integer"
                },
                "EmploymentDurationCurrentEmployer": {
                    "description": "Employment time with the current employer",
                    "type": "string"
                },
                "HomeOwnershipType": {
                    "format": "int32",
                    "description": "Type of home ownership",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeTotal": {
                    "format": "double",
                    "description": "Total income",
                    "type": "number"
                },
                "MonthlyPayment": {
                    "format": "double",
                    "description": "Loan monthly payment amount.",
                    "type": "number"
                },
                "MonthlyPaymentDay": {
                    "format": "int32",
                    "description": "The day of the month the loan payments are scheduled for.\r\n            The actual date is adjusted for weekends and bank holidays.\r\n            E.g. if 10th is a Sunday then the payment will be made on the 11th in that month.",
                    "type": "integer"
                },
                "ModelVersion": {
                    "format": "int32",
                    "description": "The version of the Rating model used for issuing the Bondora Rating",
                    "type": "integer"
                },
                "ExpectedLoss": {
                    "format": "double",
                    "description": "Expected Loss calculated by the Rating model",
                    "type": "number"
                },
                "Rating": {
                    "description": "Bondora Rating issued by the Rating model",
                    "type": "string"
                },
                "LossGivenDefault": {
                    "format": "double",
                    "description": "Gives the percentage of outstanding exposure at the time of default that an investor is likely to lose if a loan actually defaults. \r\n            This means the proportion of funds lost for the investor after all expected recovery and accounting for the time value of the money recovered. \r\n            In general, LGD parameter is intended to be estimated based on the historical recoveries. However, in new markets where limited experience does not allow us more precise loss given default estimates, a LGD of 90% is assumed.",
                    "type": "number"
                },
                "ProbabilityOfDefault": {
                    "format": "double",
                    "description": "Probability of Default, refers to a loan’s probability of default within one year horizon.",
                    "type": "number"
                },
                "ExpectedReturnAlpha": {
                    "format": "double",
                    "description": "Expected return alpha",
                    "type": "number"
                },
                "LiabilitiesTotal": {
                    "format": "double",
                    "description": "Total liabilities",
                    "type": "number"
                },
                "ListedOnUTC": {
                    "format": "date-time",
                    "description": "Date when auction was published",
                    "type": "string"
                },
                "ActualCloseDate": {
                    "format": "date-time",
                    "description": "Date and time when the auction was actually closed. Is null, if auction is active.",
                    "type": "string"
                },
                "WinningBidsAmount": {
                    "format": "double",
                    "description": "The amount that auction is fulfilled, taken amount only bids where investors have enough funds.\r\n            This is preliminary calculated amount and can change when trying to close auction (auction is closed, when auction is funded 100% or PlannedCloseDate is reached) and specific investor(s) do not have enough funds.",
                    "type": "number"
                },
                "RemainingAmount": {
                    "format": "double",
                    "description": "The amount that is remaining to be funded (AppliedAmount - WinningBidsAmount).",
                    "type": "number"
                },
                "UserBids": {
                    "format": "int32",
                    "description": "How many bids current user has bidden into the auction",
                    "type": "integer"
                },
                "UserBidAmount": {
                    "format": "double",
                    "description": "How much current user has bidden into the auction",
                    "type": "number"
                },
                "Fullfilled": {
                    "format": "double",
                    "description": "Precentage, how much the auction is fulfilled. Can be more than 100%, if overfunded.",
                    "type": "number"
                },
                "CreditScore": {
                    "format": "int32",
                    "description": "<para>\r\n  1000 No previous payments problems</para>\r\n<para>\r\n  900 Payments problems finished 24-36 months ago</para>\r\n<para>\r\n  800 Payments problems finished 12-24 months ago</para>\r\n<para>\r\n  700 Payments problems finished 6-12 months ago</para>\r\n<para>\r\n  600 Payment problems finished &lt;6 months ago</para>\r\n<para>\r\n  500 Active payment problems</para>",
                    "type": "integer"
                },
                "ScoringDate": {
                    "format": "date-time",
                    "description": "Date when the Rating was calculated for this loan",
                    "type": "string"
                },
                "UseOfLoan": {
                    "format": "int32",
                    "description": "Use of loan\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        -1
                    ],
                    "type": "integer"
                },
                "MaritalStatus": {
                    "format": "int32",
                    "description": "Marital status\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        -1
                    ],
                    "type": "integer"
                },
                "NrOfDependants": {
                    "description": "Number of children or other dependants\r\n            <para>Only Value for new Auctions since 1st of june 2017 is NULL</para>",
                    "type": "string"
                },
                "EmploymentStatus": {
                    "format": "int32",
                    "description": "Employment status\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        -1
                    ],
                    "type": "integer"
                },
                "EmploymentPosition": {
                    "description": "Employment position\r\n            <para>Only Value for new Auctions since 1st of june 2017 is NULL</para>",
                    "type": "string"
                },
                "WorkExperience": {
                    "description": "Work experience in total\r\n            <para>Only Value for new Auctions since 1st of june 2017 is NULL</para>",
                    "type": "string"
                },
                "OccupationArea": {
                    "format": "int32",
                    "description": "Occupation area\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeFromPrincipalEmployer": {
                    "format": "double",
                    "description": "Salary\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromPension": {
                    "format": "double",
                    "description": "Pension\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromFamilyAllowance": {
                    "format": "double",
                    "description": "Family allowance\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromSocialWelfare": {
                    "format": "double",
                    "description": "Social welfare\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromLeavePay": {
                    "format": "double",
                    "description": "Leave pay\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromChildSupport": {
                    "format": "double",
                    "description": "Child support\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeOther": {
                    "format": "double",
                    "description": "Other income\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "FreeCash": {
                    "format": "double",
                    "description": "Discretionary Income\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "DebtToIncome": {
                    "format": "double",
                    "description": "Debt to income ratio\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "EADRate": {
                    "format": "double",
                    "description": "Exposure at Default (expressed as a percentage of the original loan amount), indicates outstanding investor exposure at the time of default, including outstanding principal amount plus accrued but unpaid interests.",
                    "type": "number"
                },
                "MaturityFactor": {
                    "format": "double",
                    "description": "Maturity Factor M of 1.3 is assumed for loans with duration exceeding one year.",
                    "type": "number"
                },
                "InterestRateAlpha": {
                    "format": "double",
                    "description": "Interest rate alpha",
                    "type": "number"
                }
            }
        },
        "ApiResultExtendedAuction": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/definitions/AuctionExtended",
                    "description": "The payload of the response. Type depends on the API request."
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "AuctionExtended": {
            "description": "Auction related data with debts and liabilities",
            "type": "object",
            "properties": {
                "Liabilities": {
                    "description": "Borrower's liabilities",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Liability"
                    }
                },
                "Debts": {
                    "description": "Borrower's debts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Debt"
                    }
                },
                "BorrowerHistory": {
                    "$ref": "#/definitions/BorrowerHistory",
                    "description": "Borrower's history"
                },
                "LoanId": {
                    "description": "Unique loan identificator",
                    "type": "string"
                },
                "AuctionId": {
                    "description": "Unique auction identificator",
                    "type": "string"
                },
                "LoanNumber": {
                    "format": "int32",
                    "description": "Number of the loan",
                    "type": "integer"
                },
                "UserName": {
                    "description": "Customer's Bondora username",
                    "type": "string"
                },
                "NewCreditCustomer": {
                    "format": "int32",
                    "description": "Did the customer have prior credit history in Bondora\r\n            <para>0 Customer had at least 3 months of credit history in Bondora</para><para>1 No prior credit history in Bondora</para>",
                    "type": "integer"
                },
                "LoanApplicationStartedDate": {
                    "format": "date-time",
                    "description": "Date when the loan application was started",
                    "type": "string"
                },
                "PlannedCloseDate": {
                    "format": "date-time",
                    "description": "Date and time when the auction is closed, if it's not funded 100% before that.\r\n            Auction will be closed before that, if auction is funded 100%.",
                    "type": "string"
                },
                "ApplicationSignedHour": {
                    "format": "int32",
                    "description": "Hour of signing the loan application",
                    "type": "integer"
                },
                "ApplicationSignedWeekday": {
                    "format": "int32",
                    "description": "Weekday of signing the loan application",
                    "type": "integer"
                },
                "VerificationType": {
                    "format": "int32",
                    "description": "Verification type",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "LanguageCode": {
                    "format": "int32",
                    "description": "Two letter language code",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "type": "integer"
                },
                "Age": {
                    "format": "int32",
                    "description": "Age of the borrower (years)",
                    "type": "integer"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "description": "Borrower's date of birth",
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "description": "Gender",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "Country": {
                    "description": "Residency of the borrower",
                    "type": "string"
                },
                "CreditScoreEsMicroL": {
                    "description": "A score that is specifically designed for risk classifying subprime borrowers (defined by Equifax as borrowers that do not have access to bank loans). \r\n            A measure of the probability of default one month ahead.\r\n            <para>The score is given on a 10-grade scale, from the best score to the worst:</para><para>M1, M2, M3, M4, M5, M6, M7, M8, M9, M10</para>",
                    "type": "string"
                },
                "CreditScoreEsEquifaxRisk": {
                    "description": "Generic score for the loan applicants that do not have active past due operations in ASNEF.\r\n            A measure of the probability of default one year ahead. \r\n            The score is given on a 6-grade scale.\r\n            <para>AAA Very low</para><para>AA Low</para><para>A Average</para><para>B Average High</para><para>C High</para><para>D Very High</para>",
                    "type": "string"
                },
                "CreditScoreFiAsiakasTietoRiskGrade": {
                    "description": "Credit Scoring model for Finnish Asiakastieto\r\n            <para>RL1 Very low risk 01-20</para><para>RL2 Low risk 21-40</para><para>RL3 Average risk 41-60</para><para>RL4 Big risk 61-80</para><para>RL5 Huge risk 81-100</para>",
                    "type": "string"
                },
                "CreditScoreEeMini": {
                    "description": "Credit scoring for Estonian loans\r\n            <para>1000 No previous payments problems</para><para>900 Payments problems finished 24-36 months ago</para><para>800 Payments problems finished 12-24 months ago</para><para>700 Payments problems finished 6-12 months ago</para><para>600 Payment problems finished &lt;6 months ago</para><para>500 Active payment problems</para>",
                    "type": "string"
                },
                "AppliedAmount": {
                    "format": "double",
                    "description": "The amount borrower applied for originally",
                    "type": "number"
                },
                "Interest": {
                    "format": "double",
                    "description": "Maximum interest rate accepted in the loan application",
                    "type": "number"
                },
                "LoanDuration": {
                    "format": "int32",
                    "description": "The loan term",
                    "type": "integer"
                },
                "County": {
                    "description": "County of the borrower",
                    "type": "string"
                },
                "City": {
                    "description": "City of the borrower",
                    "type": "string"
                },
                "Education": {
                    "format": "int32",
                    "description": "Education",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        -1
                    ],
                    "type": "integer"
                },
                "EmploymentDurationCurrentEmployer": {
                    "description": "Employment time with the current employer",
                    "type": "string"
                },
                "HomeOwnershipType": {
                    "format": "int32",
                    "description": "Type of home ownership",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeTotal": {
                    "format": "double",
                    "description": "Total income",
                    "type": "number"
                },
                "MonthlyPayment": {
                    "format": "double",
                    "description": "Loan monthly payment amount.",
                    "type": "number"
                },
                "MonthlyPaymentDay": {
                    "format": "int32",
                    "description": "The day of the month the loan payments are scheduled for.\r\n            The actual date is adjusted for weekends and bank holidays.\r\n            E.g. if 10th is a Sunday then the payment will be made on the 11th in that month.",
                    "type": "integer"
                },
                "ModelVersion": {
                    "format": "int32",
                    "description": "The version of the Rating model used for issuing the Bondora Rating",
                    "type": "integer"
                },
                "ExpectedLoss": {
                    "format": "double",
                    "description": "Expected Loss calculated by the Rating model",
                    "type": "number"
                },
                "Rating": {
                    "description": "Bondora Rating issued by the Rating model",
                    "type": "string"
                },
                "LossGivenDefault": {
                    "format": "double",
                    "description": "Gives the percentage of outstanding exposure at the time of default that an investor is likely to lose if a loan actually defaults. \r\n            This means the proportion of funds lost for the investor after all expected recovery and accounting for the time value of the money recovered. \r\n            In general, LGD parameter is intended to be estimated based on the historical recoveries. However, in new markets where limited experience does not allow us more precise loss given default estimates, a LGD of 90% is assumed.",
                    "type": "number"
                },
                "ProbabilityOfDefault": {
                    "format": "double",
                    "description": "Probability of Default, refers to a loan’s probability of default within one year horizon.",
                    "type": "number"
                },
                "ExpectedReturnAlpha": {
                    "format": "double",
                    "description": "Expected return alpha",
                    "type": "number"
                },
                "LiabilitiesTotal": {
                    "format": "double",
                    "description": "Total liabilities",
                    "type": "number"
                },
                "ListedOnUTC": {
                    "format": "date-time",
                    "description": "Date when auction was published",
                    "type": "string"
                },
                "ActualCloseDate": {
                    "format": "date-time",
                    "description": "Date and time when the auction was actually closed. Is null, if auction is active.",
                    "type": "string"
                },
                "WinningBidsAmount": {
                    "format": "double",
                    "description": "The amount that auction is fulfilled, taken amount only bids where investors have enough funds.\r\n            This is preliminary calculated amount and can change when trying to close auction (auction is closed, when auction is funded 100% or PlannedCloseDate is reached) and specific investor(s) do not have enough funds.",
                    "type": "number"
                },
                "RemainingAmount": {
                    "format": "double",
                    "description": "The amount that is remaining to be funded (AppliedAmount - WinningBidsAmount).",
                    "type": "number"
                },
                "UserBids": {
                    "format": "int32",
                    "description": "How many bids current user has bidden into the auction",
                    "type": "integer"
                },
                "UserBidAmount": {
                    "format": "double",
                    "description": "How much current user has bidden into the auction",
                    "type": "number"
                },
                "Fullfilled": {
                    "format": "double",
                    "description": "Precentage, how much the auction is fulfilled. Can be more than 100%, if overfunded.",
                    "type": "number"
                },
                "CreditScore": {
                    "format": "int32",
                    "description": "<para>\r\n  1000 No previous payments problems</para>\r\n<para>\r\n  900 Payments problems finished 24-36 months ago</para>\r\n<para>\r\n  800 Payments problems finished 12-24 months ago</para>\r\n<para>\r\n  700 Payments problems finished 6-12 months ago</para>\r\n<para>\r\n  600 Payment problems finished &lt;6 months ago</para>\r\n<para>\r\n  500 Active payment problems</para>",
                    "type": "integer"
                },
                "ScoringDate": {
                    "format": "date-time",
                    "description": "Date when the Rating was calculated for this loan",
                    "type": "string"
                },
                "UseOfLoan": {
                    "format": "int32",
                    "description": "Use of loan\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        -1
                    ],
                    "type": "integer"
                },
                "MaritalStatus": {
                    "format": "int32",
                    "description": "Marital status\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        -1
                    ],
                    "type": "integer"
                },
                "NrOfDependants": {
                    "description": "Number of children or other dependants\r\n            <para>Only Value for new Auctions since 1st of june 2017 is NULL</para>",
                    "type": "string"
                },
                "EmploymentStatus": {
                    "format": "int32",
                    "description": "Employment status\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        -1
                    ],
                    "type": "integer"
                },
                "EmploymentPosition": {
                    "description": "Employment position\r\n            <para>Only Value for new Auctions since 1st of june 2017 is NULL</para>",
                    "type": "string"
                },
                "WorkExperience": {
                    "description": "Work experience in total\r\n            <para>Only Value for new Auctions since 1st of june 2017 is NULL</para>",
                    "type": "string"
                },
                "OccupationArea": {
                    "format": "int32",
                    "description": "Occupation area\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeFromPrincipalEmployer": {
                    "format": "double",
                    "description": "Salary\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromPension": {
                    "format": "double",
                    "description": "Pension\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromFamilyAllowance": {
                    "format": "double",
                    "description": "Family allowance\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromSocialWelfare": {
                    "format": "double",
                    "description": "Social welfare\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromLeavePay": {
                    "format": "double",
                    "description": "Leave pay\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeFromChildSupport": {
                    "format": "double",
                    "description": "Child support\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "IncomeOther": {
                    "format": "double",
                    "description": "Other income\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "FreeCash": {
                    "format": "double",
                    "description": "Discretionary Income\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "DebtToIncome": {
                    "format": "double",
                    "description": "Debt to income ratio\r\n            <para>Only Value for new Auctions since 1st of june 2017 is 0</para>",
                    "type": "number"
                },
                "EADRate": {
                    "format": "double",
                    "description": "Exposure at Default (expressed as a percentage of the original loan amount), indicates outstanding investor exposure at the time of default, including outstanding principal amount plus accrued but unpaid interests.",
                    "type": "number"
                },
                "MaturityFactor": {
                    "format": "double",
                    "description": "Maturity Factor M of 1.3 is assumed for loans with duration exceeding one year.",
                    "type": "number"
                },
                "InterestRateAlpha": {
                    "format": "double",
                    "description": "Interest rate alpha",
                    "type": "number"
                }
            }
        },
        "Liability": {
            "description": "Borrower's liability",
            "type": "object",
            "properties": {
                "IsRefinanced": {
                    "description": "Is refinanced\r\n            <para>Only Value for new Auctions since 1st of june 2017 is false</para>",
                    "type": "boolean"
                },
                "TypeOfLiability": {
                    "format": "int32",
                    "description": "Type of liability\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        -1
                    ],
                    "type": "integer"
                },
                "Creditor": {
                    "description": "Creditor",
                    "type": "string"
                },
                "MonthlyPayment": {
                    "format": "double",
                    "description": "Monthly payment",
                    "type": "number"
                },
                "Outstanding": {
                    "format": "double",
                    "description": "Outstanding\r\n            <para>Only Value for new Auctions since 1st of june 2017 is NULL</para>",
                    "type": "number"
                },
                "CollateralType": {
                    "format": "int32",
                    "description": "Type of collateral\r\n            <para>Only Value for new Auctions since 1st of june 2017 is -1 (NotUsed)</para>",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        -1
                    ],
                    "type": "integer"
                }
            }
        },
        "Debt": {
            "description": "Borrower's debt",
            "type": "object",
            "properties": {
                "StartDate": {
                    "format": "date-time",
                    "description": "Start",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "description": "End",
                    "type": "string"
                },
                "Amount": {
                    "description": "Amount",
                    "type": "string"
                },
                "MaxAmount": {
                    "description": "Max amount",
                    "type": "string"
                },
                "Industry": {
                    "description": "Industry",
                    "type": "string"
                },
                "Reporter": {
                    "description": "Reporter",
                    "type": "string"
                }
            }
        },
        "BorrowerHistory": {
            "description": "Borrower's history",
            "type": "object",
            "properties": {
                "Overdue": {
                    "format": "double",
                    "description": "Borrower's current overdue amount",
                    "type": "number"
                },
                "PrincipalRepaid": {
                    "format": "double",
                    "description": "Borrower's total principal repaid",
                    "type": "number"
                },
                "InterestRepaid": {
                    "format": "double",
                    "description": "Borrower's total interest paid",
                    "type": "number"
                },
                "LateChargesRepaid": {
                    "format": "double",
                    "description": "Borrower's total late charges paid",
                    "type": "number"
                },
                "RepaimentsTotal": {
                    "format": "double",
                    "description": "Borrower's total repaiments",
                    "type": "number"
                },
                "IssuedLoans": {
                    "format": "int32",
                    "description": "Borrower's issued loans count",
                    "type": "integer"
                },
                "IssuedLoanAmount": {
                    "format": "double",
                    "description": "Borrower's issued loans amount",
                    "type": "number"
                }
            }
        },
        "ApiBidSummariesRequest": {
            "description": "Request object for filtering api bids",
            "type": "object",
            "properties": {
                "BidStatusCode": {
                    "format": "int32",
                    "description": "Bid status code",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                },
                "StartDate": {
                    "format": "date-time",
                    "description": "Start date",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "description": "End date",
                    "type": "string"
                },
                "PageSize": {
                    "format": "int32",
                    "description": "Max items in result, up to 20000",
                    "maximum": 20000,
                    "minimum": 1,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Result page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "ApiResultBids": {
            "required": [
                "TotalCount",
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "PageSize": {
                    "format": "int32",
                    "description": "Requested Max items in result",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Requested page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "TotalCount": {
                    "format": "int32",
                    "description": "Total number of items found",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BidSummary"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "BidSummary": {
            "description": "Bid's information",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Bid unique identifier",
                    "type": "string"
                },
                "AuctionId": {
                    "description": "Id of auction to bid into",
                    "type": "string"
                },
                "RequestedBidAmount": {
                    "format": "double",
                    "description": "Amount that was requested to bid",
                    "type": "number"
                },
                "ActualBidAmount": {
                    "format": "double",
                    "description": "Amount that is bidded",
                    "type": "number"
                },
                "RequestedBidMinimumLimit": {
                    "format": "double",
                    "description": "Minimum amount that was specified for auction",
                    "type": "number"
                },
                "BidRequestedDate": {
                    "format": "date-time",
                    "description": "When bid was requested",
                    "type": "string"
                },
                "BidProcessedDate": {
                    "format": "date-time",
                    "description": "When bid was processed",
                    "type": "string"
                },
                "IsRequestBeingProcessed": {
                    "description": "Is request currently processed",
                    "type": "boolean"
                },
                "StatusCode": {
                    "format": "int32",
                    "description": "Status of bid\r\n            <para>0 Pending</para><para>1 Open</para><para>2 Successful</para><para>3 Failed</para><para>4 Cancelled</para><para>5 Accepted</para>",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                },
                "FailureReason": {
                    "format": "int32",
                    "description": "Why bid failed",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14
                    ],
                    "type": "integer"
                }
            }
        },
        "BidRequest": {
            "description": "Bids to make for the user.",
            "required": [
                "Bids"
            ],
            "type": "object",
            "properties": {
                "Bids": {
                    "description": "The bids to make.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bid"
                    }
                }
            }
        },
        "Bid": {
            "description": "Bid to make into Auction.",
            "required": [
                "AuctionId",
                "Amount"
            ],
            "type": "object",
            "properties": {
                "AuctionId": {
                    "description": "The Auction's ID to bid to.",
                    "type": "string"
                },
                "Amount": {
                    "format": "double",
                    "description": "Amount to bid into Auction",
                    "maximum": 2147483647,
                    "minimum": 5,
                    "type": "number"
                },
                "MinAmount": {
                    "format": "double",
                    "description": "Not used. Value will be ignored.",
                    "type": "number"
                }
            }
        },
        "ApiResultMakeBids": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BidResponse"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "BidResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Item unique identifier",
                    "type": "string"
                },
                "AuctionId": {
                    "description": "Auction unique identifier",
                    "type": "string"
                },
                "Amount": {
                    "format": "double",
                    "description": "Amount to bid into Auction",
                    "type": "number"
                },
                "MinAmount": {
                    "format": "double",
                    "description": "Not used. Will always be NULL.",
                    "type": "number"
                }
            }
        },
        "ApiResultBid": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/definitions/BidSummary",
                    "description": "The payload of the response. Type depends on the API request."
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "ApiResult": {
            "description": "Result of the API request",
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "PublicDatasetRequest": {
            "description": "Request parameters for getting loan public data",
            "type": "object",
            "properties": {
                "LoanIds": {
                    "description": "Specific loans to search",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Countries": {
                    "description": "Two letter iso code for country of origin: EE, ES, FI",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Ratings": {
                    "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "LoanDateFrom": {
                    "format": "date-time",
                    "description": "Loan start date from",
                    "type": "string"
                },
                "LoanDateTo": {
                    "format": "date-time",
                    "description": "Loan start date to",
                    "type": "string"
                },
                "PageSize": {
                    "format": "int32",
                    "description": "Max items in result, up to 10000",
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Result page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "ApiResultPublicDataset": {
            "required": [
                "TotalCount",
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "PageSize": {
                    "format": "int32",
                    "description": "Requested Max items in result",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Requested page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "TotalCount": {
                    "format": "int32",
                    "description": "Total number of items found",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PublicDatasetItem"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "PublicDatasetItem": {
            "type": "object",
            "properties": {
                "LoanId": {
                    "description": "A unique ID given to a loan",
                    "type": "string"
                },
                "LoanNumber": {
                    "format": "int32",
                    "description": "A unique loan number displayed in Bondora's system",
                    "type": "integer"
                },
                "ListedOnUTC": {
                    "format": "date-time",
                    "description": "Date when the loan application appeared on Primary Market",
                    "type": "string"
                },
                "BiddingStartedOn": {
                    "format": "date-time",
                    "description": "Date when the auction bidding started on",
                    "type": "string"
                },
                "BidsPortfolioManager": {
                    "format": "double",
                    "description": "The amount of investment offers made by Portfolio Managers",
                    "type": "number"
                },
                "BidsApi": {
                    "format": "double",
                    "description": "The amount of investment offers made via Api",
                    "type": "number"
                },
                "BidsManual": {
                    "format": "double",
                    "description": "The amount of investment offers made manually",
                    "type": "number"
                },
                "UserName": {
                    "description": "Customer's Bondora username",
                    "type": "string"
                },
                "NewCreditCustomer": {
                    "description": "<para>Did the customer have prior credit history in Bondora</para>\r\n<para>\r\n  false Customer had at least 3 months of credit history in Bondora</para>\r\n<para>\r\n  true No prior credit history in Bondora</para>",
                    "type": "boolean"
                },
                "LoanApplicationStartedDate": {
                    "format": "date-time",
                    "description": "Date when the loan application was started",
                    "type": "string"
                },
                "LoanDate": {
                    "format": "date-time",
                    "description": "Date when the loan was issued",
                    "type": "string"
                },
                "ContractEndDate": {
                    "format": "date-time",
                    "description": "Date when the loan contract ended",
                    "type": "string"
                },
                "FirstPaymentDate": {
                    "format": "date-time",
                    "description": "First payment date according to initial loan schedule",
                    "type": "string"
                },
                "MaturityDate_Original": {
                    "format": "date-time",
                    "description": "Loan maturity date according to the original loan schedule",
                    "type": "string"
                },
                "MaturityDate_Last": {
                    "format": "date-time",
                    "description": "Loan maturity date as of the report generation date",
                    "type": "string"
                },
                "ApplicationSignedHour": {
                    "format": "int32",
                    "description": "Hour of signing the loan application",
                    "type": "integer"
                },
                "ApplicationSignedWeekday": {
                    "format": "int32",
                    "description": "Weekday of signing the loan application",
                    "type": "integer"
                },
                "VerificationType": {
                    "format": "int32",
                    "description": "Method used for loan application data verification",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "LanguageCode": {
                    "format": "int32",
                    "description": "Customer two letter language code",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "type": "integer"
                },
                "Age": {
                    "format": "int32",
                    "description": "Age of the borrower (years)",
                    "type": "integer"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "description": "DateOfBirth of the borrower",
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "description": "Borrower gender",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "Country": {
                    "description": "Residency of the borrower",
                    "type": "string"
                },
                "County": {
                    "description": "County of the borrower",
                    "type": "string"
                },
                "City": {
                    "description": "City of the borrower",
                    "type": "string"
                },
                "AppliedAmount": {
                    "format": "double",
                    "description": "Amount applied",
                    "type": "number"
                },
                "Amount": {
                    "format": "double",
                    "description": "Amount the borrower received",
                    "type": "number"
                },
                "Interest": {
                    "format": "double",
                    "description": "Interest rate",
                    "type": "number"
                },
                "LoanDuration": {
                    "format": "int32",
                    "description": "The loan term",
                    "type": "integer"
                },
                "MonthlyPayment": {
                    "format": "int32",
                    "description": "Estimated amount the borrower has to pay every month",
                    "type": "integer"
                },
                "UseOfLoan": {
                    "format": "int32",
                    "description": "Use of loan",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        -1
                    ],
                    "type": "integer"
                },
                "Education": {
                    "format": "int32",
                    "description": "Education",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        -1
                    ],
                    "type": "integer"
                },
                "MaritalStatus": {
                    "format": "int32",
                    "description": "Marital status",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        -1
                    ],
                    "type": "integer"
                },
                "NrOfDependants": {
                    "description": "Number of children or other dependants",
                    "type": "string"
                },
                "EmploymentStatus": {
                    "format": "int32",
                    "description": "Employment status",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        -1
                    ],
                    "type": "integer"
                },
                "EmploymentDurationCurrentEmployer": {
                    "description": "Employment time with the current employer",
                    "type": "string"
                },
                "EmploymentPosition": {
                    "description": "Employment position with the current employer",
                    "type": "string"
                },
                "WorkExperience": {
                    "description": "Work experience in total",
                    "type": "string"
                },
                "OccupationArea": {
                    "format": "int32",
                    "description": "Occupation area",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        -1
                    ],
                    "type": "integer"
                },
                "HomeOwnershipType": {
                    "format": "int32",
                    "description": "Home ownership type",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeFromPrincipalEmployer": {
                    "format": "double",
                    "description": "Salary",
                    "type": "number"
                },
                "IncomeFromPension": {
                    "format": "double",
                    "description": "Pension",
                    "type": "number"
                },
                "IncomeFromFamilyAllowance": {
                    "format": "double",
                    "description": "Family allowance",
                    "type": "number"
                },
                "IncomeFromSocialWelfare": {
                    "format": "double",
                    "description": "Social welfare",
                    "type": "number"
                },
                "IncomeFromLeavePay": {
                    "format": "double",
                    "description": "Leave pay",
                    "type": "number"
                },
                "IncomeFromChildSupport": {
                    "format": "double",
                    "description": "Child support",
                    "type": "number"
                },
                "IncomeOther": {
                    "format": "double",
                    "description": "Other income",
                    "type": "number"
                },
                "IncomeTotal": {
                    "format": "double",
                    "description": "Total income",
                    "type": "number"
                },
                "ExistingLiabilities": {
                    "format": "int32",
                    "description": "Borrower's number of existing liabilities",
                    "type": "integer"
                },
                "RefinanceLiabilities": {
                    "format": "int32",
                    "description": "The total amount of liabilities after refinancing",
                    "type": "integer"
                },
                "LiabilitiesTotal": {
                    "format": "double",
                    "description": "Total monthly liabilities",
                    "type": "number"
                },
                "DebtToIncome": {
                    "format": "double",
                    "description": "Debt to income ratio",
                    "type": "number"
                },
                "FreeCash": {
                    "format": "double",
                    "description": "Discretionary income after monthly liabilities",
                    "type": "number"
                },
                "MonthlyPaymentDay": {
                    "format": "int32",
                    "description": "The day of the month the loan payments are scheduled for The actual date is adjusted for weekends and bank holidays (e.g. if 10th is Sunday then the payment will be made on the 11th in that month)",
                    "type": "integer"
                },
                "ActiveScheduleFirstPaymentReached": {
                    "description": "Whether the first payment date has been reached according to the active schedule",
                    "type": "boolean"
                },
                "PlannedPrincipalTillDate": {
                    "format": "double",
                    "description": "According to active schedule the amount of principal the investment should have received",
                    "type": "number"
                },
                "PlannedInterestTillDate": {
                    "format": "double",
                    "description": "According to active schedule the amount of interest the investment should have received",
                    "type": "number"
                },
                "LastPaymentOn": {
                    "format": "date-time",
                    "description": "The date of the current last payment received from the borrower",
                    "type": "string"
                },
                "CurrentDebtDaysPrimary": {
                    "format": "int32",
                    "description": "How long the loan has been in Principal Debt",
                    "type": "integer"
                },
                "DebtOccuredOn": {
                    "format": "date-time",
                    "description": "The date when Principal Debt occurred",
                    "type": "string"
                },
                "CurrentDebtDaysSecondary": {
                    "format": "int32",
                    "description": "How long the loan has been in Interest Debt",
                    "type": "integer"
                },
                "DebtOccuredOnForSecondary": {
                    "format": "date-time",
                    "description": "The date when Interest Debt occurred",
                    "type": "string"
                },
                "ExpectedLoss": {
                    "format": "double",
                    "description": "Expected Loss calculated by the current Rating model",
                    "type": "number"
                },
                "LossGivenDefault": {
                    "format": "double",
                    "description": "Gives the percentage of outstanding exposure at the time of default that an investor is likely to lose if a loan actually defaults. \r\n            This means the proportion of funds lost for the investor after all expected recovery and accounting for the time value of the money recovered. \r\n            In general, LGD parameter is intended to be estimated based on the historical recoveries. \r\n            However, in new markets where limited experience does not allow us more precise loss given default estimates, a LGD of 90% is assumed.",
                    "type": "number"
                },
                "ExpectedReturn": {
                    "format": "double",
                    "description": "Expected Return calculated by the current Rating model",
                    "type": "number"
                },
                "ProbabilityOfDefault": {
                    "format": "double",
                    "description": "Probability of Default, refers to a loan’s probability of default within one year horizon.",
                    "type": "number"
                },
                "DefaultDate": {
                    "format": "date-time",
                    "description": "The date when loan went into defaulted state and collection process was started",
                    "type": "string"
                },
                "PrincipalOverdueBySchedule": {
                    "format": "double",
                    "description": "According to the current schedule, principal that is overdue",
                    "type": "number"
                },
                "PlannedPrincipalPostDefault": {
                    "format": "double",
                    "description": "The amount of principal that was planned to be received after the default occurred",
                    "type": "number"
                },
                "PlannedInterestPostDefault": {
                    "format": "double",
                    "description": "The amount of interest that was planned to be received after the default occurred",
                    "type": "number"
                },
                "EAD1": {
                    "format": "double",
                    "description": "Exposure at default, outstanding principal at default",
                    "type": "number"
                },
                "EAD2": {
                    "format": "double",
                    "description": "Exposure at default, loan amount less all payments prior to default",
                    "type": "number"
                },
                "PrincipalRecovery": {
                    "format": "double",
                    "description": "Principal recovered due to collection process from in debt loans",
                    "type": "number"
                },
                "InterestRecovery": {
                    "format": "double",
                    "description": "Interest recovered due to collection process from in debt loans",
                    "type": "number"
                },
                "RecoveryStage": {
                    "format": "int32",
                    "description": "Current stage according to the recovery model 1 Collection 2 Recovery 3 Write Off",
                    "enum": [
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "StageActiveSince": {
                    "format": "date-time",
                    "description": "How long the current recovery stage has been active",
                    "type": "string"
                },
                "ModelVersion": {
                    "format": "int32",
                    "description": "The version of the Rating model used for issuing the Bondora Rating",
                    "type": "integer"
                },
                "Rating": {
                    "description": "Bondora Rating issued by the Rating model",
                    "type": "string"
                },
                "EL_V0": {
                    "format": "double",
                    "description": "Expected loss calculated by the specified version of Rating model",
                    "type": "number"
                },
                "Rating_V0": {
                    "description": "Bondora Rating issued by version 0 of the Rating model",
                    "type": "string"
                },
                "EL_V1": {
                    "format": "double",
                    "description": "Expected loss calculated by the specified version of Rating model",
                    "type": "number"
                },
                "Rating_V1": {
                    "description": "Bondora Rating issued by version 1 of the Rating model",
                    "type": "string"
                },
                "EL_V2": {
                    "format": "double",
                    "description": "Expected loss calculated by the specified version of Rating model",
                    "type": "number"
                },
                "Rating_V2": {
                    "description": "Bondora Rating issued by version 2 of the Rating model",
                    "type": "string"
                },
                "LoanCancelled": {
                    "description": "If Loan was cancelled",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The current status of the loan application",
                    "type": "string"
                },
                "Restructured": {
                    "description": "The original maturity date of the loan has been increased by more than 60 days",
                    "type": "boolean"
                },
                "ActiveLateCategory": {
                    "description": "When a loan is in Principal Debt then it will be categorized by Principal Debt days",
                    "type": "string"
                },
                "WorseLateCategory": {
                    "description": "Displays the last longest period of days when the loan was in Principal Debt",
                    "type": "string"
                },
                "CreditScoreEsMicroL": {
                    "description": "A score that is specifically designed for risk classifying subprime borrowers (defined by Equifax as borrowers that do not have access to bank loans). \r\n            A measure of the probability of default one month ahead.\r\n            <para>The score is given on a 10-grade scale, from the best score to the worst:</para><para>M1, M2, M3, M4, M5, M6, M7, M8, M9, M10</para>",
                    "type": "string"
                },
                "CreditScoreEsEquifaxRisk": {
                    "description": "Generic score for the loan applicants that do not have active past due operations in ASNEF.\r\n            A measure of the probability of default one year ahead. \r\n            The score is given on a 6-grade scale.\r\n            <para>AAA Very low</para><para>AA Low</para><para>A Average</para><para>B Average High</para><para>C High</para><para>D Very High</para>",
                    "type": "string"
                },
                "CreditScoreFiAsiakasTietoRiskGrade": {
                    "description": "Credit Scoring model for Finnish Asiakastieto\r\n            <para>RL1 Very low risk 01-20</para><para>RL2 Low risk 21-40</para><para>RL3 Average risk 41-60</para><para>RL4 Big risk 61-80</para><para>RL5 Huge risk 81-100</para>",
                    "type": "string"
                },
                "CreditScoreEeMini": {
                    "description": "Credit scoring for Estonian loans\r\n            <para>1000 No previous payments problems</para><para>900 Payments problems finished 24-36 months ago</para><para>800 Payments problems finished 12-24 months ago</para><para>700 Payments problems finished 6-12 months ago</para><para>600 Payment problems finished &lt;6 months ago</para><para>500 Active payment problems</para>",
                    "type": "string"
                },
                "PrincipalPaymentsMade": {
                    "format": "double",
                    "description": "Note owner received loan transfers principal amount",
                    "type": "number"
                },
                "InterestAndPenaltyPaymentsMade": {
                    "format": "double",
                    "description": "Note owner received loan transfers earned interest, penalties total amount",
                    "type": "number"
                },
                "PrincipalWriteOffs": {
                    "format": "double",
                    "description": "Principal that was written off on the investment",
                    "type": "number"
                },
                "InterestAndPenaltyWriteOffs": {
                    "format": "double",
                    "description": "Interest that was written off on the investment",
                    "type": "number"
                },
                "PrincipalDebtServicingCost": {
                    "format": "double",
                    "description": "Service cost related to the recovery of the debt based on the principal of the investment",
                    "type": "number"
                },
                "InterestAndPenaltyDebtServicingCost": {
                    "format": "double",
                    "description": "Service cost related to the recovery of the debt based on the interest and penalties of the investment",
                    "type": "number"
                },
                "PrincipalBalance": {
                    "format": "double",
                    "description": "Principal that still needs to be paid by the borrower",
                    "type": "number"
                },
                "InterestAndPenaltyBalance": {
                    "format": "double",
                    "description": "Unpaid interest and penalties",
                    "type": "number"
                },
                "NoOfPreviousLoansBeforeLoan": {
                    "format": "int32",
                    "description": "Number of previous loans",
                    "type": "integer"
                },
                "AmountOfPreviousLoansBeforeLoan": {
                    "format": "double",
                    "description": "Value of previous loans",
                    "type": "number"
                },
                "PreviousRepaymentsBeforeLoan": {
                    "format": "double",
                    "description": "How much the borrower had repaid before the loan",
                    "type": "number"
                },
                "PreviousEarlyRepaymentsBeforeLoan": {
                    "format": "double",
                    "description": "Previous early repaid amount before this loan",
                    "type": "number"
                },
                "PreviousEarlyRepaymentsCountBeforeLoan": {
                    "format": "int32",
                    "description": "Previous early repaid loans before this loan",
                    "type": "integer"
                },
                "GracePeriodStart": {
                    "format": "date-time",
                    "description": "Date of the beginning of Grace period",
                    "type": "string"
                },
                "GracePeriodEnd": {
                    "format": "date-time",
                    "description": "Date of the end of Grace period",
                    "type": "string"
                },
                "NextPaymentDate": {
                    "format": "date-time",
                    "description": "According to schedule the next date for borrower to make their payment",
                    "type": "string"
                },
                "NextPaymentNr": {
                    "format": "int32",
                    "description": "According to schedule the number of the next payment",
                    "type": "integer"
                },
                "NrOfScheduledPayments": {
                    "format": "int32",
                    "description": "According to schedule the count of scheduled payments",
                    "type": "integer"
                },
                "ReScheduledOn": {
                    "format": "date-time",
                    "description": "The date when the a new schedule was assigned to the borrower",
                    "type": "string"
                }
            }
        },
        "ApiResultReportList": {
            "required": [
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportItem"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "ReportItem": {
            "description": "Generec Report data",
            "type": "object",
            "properties": {
                "ReportId": {
                    "description": "Reports unique identifier",
                    "type": "string"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "description": "Report created date",
                    "type": "string"
                },
                "GeneratedOn": {
                    "format": "date-time",
                    "description": "Report generated date",
                    "type": "string"
                },
                "PeriodStart": {
                    "format": "date-time",
                    "description": "Report period end date",
                    "type": "string"
                },
                "PeriodEnd": {
                    "format": "date-time",
                    "description": "Report period start date",
                    "type": "string"
                },
                "ReportType": {
                    "format": "int32",
                    "description": "Report's type",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ],
                    "type": "integer"
                }
            }
        },
        "ApiResultReport": {
            "required": [
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "$ref": "#/definitions/Report",
                    "description": "The payload of the response. Type depends on the API request."
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "Report": {
            "description": "Report data with data rows",
            "type": "object",
            "properties": {
                "Result": {
                    "description": "<para>List of Report items. Item type depends on {Bondora.Core.Enums.ReportType} value:</para>\r\n<list type=\"bullet\">\r\n  <item>\r\n    <term>SecondMarketArchive</term>\r\n    <description>the type is {Sobralaen.Api.Models.SecondMarketArchiveReportLine}</description>\r\n  </item>\r\n  <item>\r\n    <term>AccountStatement</term>\r\n    <description>the type is {Sobralaen.Api.Models.AccountStatementReportLine}</description>\r\n  </item>\r\n  <item>\r\n    <term>Repayments</term>\r\n    <description>the type is {Sobralaen.Api.Models.RepaymentsReportLine}</description>\r\n  </item>\r\n  <item>\r\n    <term>Investments</term>\r\n    <description>the type is {Sobralaen.Api.Models.InvestmentsListReportLine}</description>\r\n  </item>\r\n  <item>\r\n    <term>PlannedFutureCashflows</term>\r\n    <description>the type is {Sobralaen.Api.Models.FutureCashflowsReportLine}</description>\r\n  </item>\r\n  <item>\r\n    <term>InvestmentsV2</term>\r\n    <description>the type is {Sobralaen.Api.Models.InvestmentsListReportLineV2}</description>\r\n  </item>\r\n</list>",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Object"
                    }
                },
                "ReportId": {
                    "description": "Reports unique identifier",
                    "type": "string"
                },
                "CreatedOn": {
                    "format": "date-time",
                    "description": "Report created date",
                    "type": "string"
                },
                "GeneratedOn": {
                    "format": "date-time",
                    "description": "Report generated date",
                    "type": "string"
                },
                "PeriodStart": {
                    "format": "date-time",
                    "description": "Report period end date",
                    "type": "string"
                },
                "PeriodEnd": {
                    "format": "date-time",
                    "description": "Report period start date",
                    "type": "string"
                },
                "ReportType": {
                    "format": "int32",
                    "description": "Report's type",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ],
                    "type": "integer"
                }
            }
        },
        "Object": {
            "type": "object",
            "properties": {}
        },
        "ReportCreateRequest": {
            "required": [
                "ReportType"
            ],
            "type": "object",
            "properties": {
                "ReportType": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ],
                    "type": "integer"
                },
                "PeriodStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "PeriodEnd": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ApiResultCreateReport": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/definitions/ReportResponse",
                    "description": "The payload of the response. Type depends on the API request."
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "ReportResponse": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "description": "Item unique identifier",
                    "type": "string"
                }
            }
        },
        "SecondMarketRequest": {
            "description": "Request object for filtering secondary market",
            "type": "object",
            "properties": {
                "LoanIssuedDateFrom": {
                    "format": "date-time",
                    "description": "Loan issued start date from",
                    "type": "string"
                },
                "LoanIssuedDateTo": {
                    "format": "date-time",
                    "description": "Loan issued start date to",
                    "type": "string"
                },
                "PrincipalMin": {
                    "format": "double",
                    "description": "Remaining principal amount min",
                    "type": "number"
                },
                "PrincipalMax": {
                    "format": "double",
                    "description": "Remaining principal amount max",
                    "type": "number"
                },
                "InterestMin": {
                    "format": "double",
                    "description": "Interest rate min",
                    "type": "number"
                },
                "InterestMax": {
                    "format": "double",
                    "description": "Interest rate max",
                    "type": "number"
                },
                "LengthMax": {
                    "format": "int32",
                    "description": "Loan lenght min",
                    "type": "integer"
                },
                "LengthMin": {
                    "format": "int32",
                    "description": "Loan lenght max",
                    "type": "integer"
                },
                "HasDebt": {
                    "description": "Is overdue",
                    "type": "boolean"
                },
                "LoanStatusCode": {
                    "description": "Loan status code\r\n            <para>2 Current</para><para>100 Overdue</para><para>5 60+ days overdue</para>",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "LoanDebtManagementStageType": {
                    "format": "int32",
                    "description": "Latest debt management stage type",
                    "enum": [
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "LoanDebtManagementDateActiveFrom": {
                    "format": "date-time",
                    "description": "Latest debt management date active from",
                    "type": "string"
                },
                "LoanDebtManagementDateActiveTo": {
                    "format": "date-time",
                    "description": "Latest debt management date active to",
                    "type": "string"
                },
                "LatePrincipalAmountMin": {
                    "format": "double",
                    "description": "Principal debt amount min",
                    "type": "number"
                },
                "LatePrincipalAmountMax": {
                    "format": "double",
                    "description": "Principal debt amount max",
                    "type": "number"
                },
                "PriceMin": {
                    "format": "double",
                    "description": "Price amount min",
                    "type": "number"
                },
                "PriceMax": {
                    "format": "double",
                    "description": "Price amount max",
                    "type": "number"
                },
                "UseOfLoan": {
                    "format": "int32",
                    "description": "Use of loan",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        -1
                    ],
                    "type": "integer"
                },
                "HasNewSchedule": {
                    "description": "Has been rescheduled",
                    "type": "boolean"
                },
                "Countries": {
                    "description": "Two letter iso code for country of origin: EE, ES, FI",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Ratings": {
                    "description": "Bondora's rating: AA, A, B, C, D, E, F, HR",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CreditScoreMin": {
                    "format": "int32",
                    "description": "Minimum credit score",
                    "type": "integer"
                },
                "CreditScoreMax": {
                    "format": "int32",
                    "description": "Maximum credit score",
                    "type": "integer"
                },
                "UserName": {
                    "description": "Borrower's username",
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "description": "Borrower's gender: Male 0, Female 1, Unknown 2",
                    "type": "integer"
                },
                "AgeMin": {
                    "format": "int32",
                    "description": "Minimal age",
                    "type": "integer"
                },
                "AgeMax": {
                    "format": "int32",
                    "description": "Maximum age",
                    "type": "integer"
                },
                "IncomeVerificationStatus": {
                    "format": "int32",
                    "description": "Income verification type",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "ShowMyItems": {
                    "description": "Can find your own items from market: Value Null = ALL, True = only your items, False = other user items",
                    "type": "boolean"
                },
                "AuctionId": {
                    "description": "Can find specific auction from market",
                    "type": "string"
                },
                "ListedOnDateFrom": {
                    "format": "date-time",
                    "description": "Date when item was published from",
                    "type": "string"
                },
                "ListedOnDateTo": {
                    "format": "date-time",
                    "description": "Date when item was published to",
                    "type": "string"
                },
                "DebtOccuredOnFrom": {
                    "format": "date-time",
                    "description": "Principal debt started date from",
                    "type": "string"
                },
                "DebtOccuredOnTo": {
                    "format": "date-time",
                    "description": "Principal debt started date to",
                    "type": "string"
                },
                "DebtOccuredOnForSecondaryFrom": {
                    "format": "date-time",
                    "description": "Interest debt started date from",
                    "type": "string"
                },
                "DebtOccuredOnForSecondaryTo": {
                    "format": "date-time",
                    "description": "Interest debt started date to",
                    "type": "string"
                },
                "DefaultedDateFrom": {
                    "format": "date-time",
                    "description": "Defaulted date from",
                    "type": "string"
                },
                "DefaultedDateTo": {
                    "format": "date-time",
                    "description": "Defaulted date to",
                    "type": "string"
                },
                "RescheduledFrom": {
                    "format": "date-time",
                    "description": "Rescheduled date from",
                    "type": "string"
                },
                "RescheduledTo": {
                    "format": "date-time",
                    "description": "Rescheduled date to",
                    "type": "string"
                },
                "LastPaymentDateFrom": {
                    "format": "date-time",
                    "description": "Last payment date from",
                    "type": "string"
                },
                "LastPaymentDateTo": {
                    "format": "date-time",
                    "description": "Last payment date to",
                    "type": "string"
                },
                "NextPaymentDateFrom": {
                    "format": "date-time",
                    "description": "Next payment date from",
                    "type": "string"
                },
                "NextPaymentDateTo": {
                    "format": "date-time",
                    "description": "Next payment date to",
                    "type": "string"
                },
                "DesiredDiscountRateMin": {
                    "format": "double",
                    "description": "Minimal DesiredDiscountRate",
                    "type": "number"
                },
                "DesiredDiscountRateMax": {
                    "format": "double",
                    "description": "Maximal DesiredDiscountRate",
                    "type": "number"
                },
                "XirrMin": {
                    "format": "double",
                    "description": "Minimal Xirr",
                    "type": "number"
                },
                "XirrMax": {
                    "format": "double",
                    "description": "Maximal Xirr",
                    "type": "number"
                },
                "PageSize": {
                    "format": "int32",
                    "description": "Max items in result, up to 100000",
                    "maximum": 100000,
                    "minimum": 1,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Result page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "ApiResultSecondMarket": {
            "required": [
                "TotalCount",
                "Count",
                "Success"
            ],
            "type": "object",
            "properties": {
                "PageSize": {
                    "format": "int32",
                    "description": "Requested Max items in result",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "PageNr": {
                    "format": "int32",
                    "description": "Requested page nr",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "TotalCount": {
                    "format": "int32",
                    "description": "Total number of items found",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Count": {
                    "format": "int32",
                    "description": "Number of items returned",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecondMarketItem"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "SecondMarketItem": {
            "description": "SecondaryMarket list item's information",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Item unique identifier",
                    "type": "string"
                },
                "LoanPartId": {
                    "description": "LoanPart unique identifier",
                    "type": "string"
                },
                "Amount": {
                    "format": "double",
                    "description": "Investment amount",
                    "type": "number"
                },
                "AuctionId": {
                    "description": "Auction unique identifier",
                    "type": "string"
                },
                "AuctionName": {
                    "description": "Auction name",
                    "type": "string"
                },
                "AuctionNumber": {
                    "format": "int32",
                    "description": "Auction number",
                    "type": "integer"
                },
                "AuctionBidNumber": {
                    "format": "int32",
                    "description": "Auction bid number",
                    "type": "integer"
                },
                "Country": {
                    "description": "Residency of the borrower",
                    "type": "string"
                },
                "CreditScore": {
                    "format": "double",
                    "description": "<para>\r\n  1000 No previous payments problems</para>\r\n<para>\r\n  900 Payments problems finished 24-36 months ago</para>\r\n<para>\r\n  800 Payments problems finished 12-24 months ago</para>\r\n<para>\r\n  700 Payments problems finished 6-12 months ago</para>\r\n<para>\r\n  600 Payment problems finished &lt;6 months ago</para>\r\n<para>\r\n  500 Active payment problems</para>",
                    "type": "number"
                },
                "Rating": {
                    "description": "Bondora Rating issued by the Rating model",
                    "type": "string"
                },
                "Interest": {
                    "format": "double",
                    "description": "Interest rate",
                    "type": "number"
                },
                "UseOfLoan": {
                    "format": "int32",
                    "description": "Use of loan",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeVerificationStatus": {
                    "format": "int32",
                    "description": "Income verification type",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "LoanStatusCode": {
                    "format": "int32",
                    "description": "Loan status code\r\n            <para>2 Current</para><para>100 Overdue</para><para>5 60+ days overdue</para><para>4 Repaid</para><para>8 Released</para>",
                    "type": "integer"
                },
                "LoanStatusActiveFrom": {
                    "format": "date-time",
                    "description": "Loan status active from",
                    "type": "string"
                },
                "LatestDebtManagementStageType": {
                    "format": "int32",
                    "description": "Latest debt management stage type",
                    "enum": [
                        1,
                        2,
                        3,
                        -1
                    ],
                    "type": "integer"
                },
                "LatestDebtManagementDate": {
                    "format": "date-time",
                    "description": "Latest debt management date",
                    "type": "string"
                },
                "UserName": {
                    "description": "Borrower's username",
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "description": "Borrower's Gender",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "description": "Borrower's date of birth",
                    "type": "string"
                },
                "SignedDate": {
                    "format": "date-time",
                    "description": "Loan issued date",
                    "type": "string"
                },
                "ReScheduledOn": {
                    "format": "date-time",
                    "description": "Last rescheduling date",
                    "type": "string"
                },
                "DebtOccuredOn": {
                    "format": "date-time",
                    "description": "Debt occured on date",
                    "type": "string"
                },
                "DebtOccuredOnForSecondary": {
                    "format": "date-time",
                    "description": "Debt occured on date",
                    "type": "string"
                },
                "NextPaymentNr": {
                    "format": "int32",
                    "description": "Next scheduled payment number",
                    "type": "integer"
                },
                "NextPaymentDate": {
                    "format": "date-time",
                    "description": "Next scheduled payment date",
                    "type": "string"
                },
                "NextPaymentSum": {
                    "format": "double",
                    "description": "Next scheduled payment amount",
                    "type": "number"
                },
                "NrOfScheduledPayments": {
                    "format": "int32",
                    "description": "Total number of scheduled payments",
                    "type": "integer"
                },
                "LastPaymentDate": {
                    "format": "date-time",
                    "description": "Last payment date",
                    "type": "string"
                },
                "PrincipalRepaid": {
                    "format": "double",
                    "description": "Total principal repaid amount",
                    "type": "number"
                },
                "InterestRepaid": {
                    "format": "double",
                    "description": "Total interest repaid amount",
                    "type": "number"
                },
                "LateAmountPaid": {
                    "format": "double",
                    "description": "Total late charges paid amount",
                    "type": "number"
                },
                "PrincipalRemaining": {
                    "format": "double",
                    "description": "Remaining principal amount",
                    "type": "number",
                    "readOnly": true
                },
                "PrincipalLateAmount": {
                    "format": "double",
                    "description": "Principal debt amount",
                    "type": "number"
                },
                "InterestLateAmount": {
                    "format": "double",
                    "description": "Interest debt amount",
                    "type": "number"
                },
                "PenaltyLateAmount": {
                    "format": "double",
                    "description": "Late charges debt amount",
                    "type": "number"
                },
                "LateAmountTotal": {
                    "format": "double",
                    "description": "Late amount total",
                    "type": "number",
                    "readOnly": true
                },
                "PrincipalWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of principal written off",
                    "type": "number"
                },
                "InterestWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of interest written off",
                    "type": "number"
                },
                "PenaltyWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of penalty written off",
                    "type": "number"
                },
                "DebtServicingCostMainAmount": {
                    "format": "double",
                    "description": "Total amount of principal debt servicing cost",
                    "type": "number"
                },
                "DebtServicingCostInterestAmount": {
                    "format": "double",
                    "description": "Total amount of interest debt servicing cost",
                    "type": "number"
                },
                "DebtServicingCostPenaltyAmount": {
                    "format": "double",
                    "description": "Total amount of penalty debt servicing cost",
                    "type": "number"
                },
                "Price": {
                    "format": "double",
                    "description": "Outstanding principal balance +/- discount or mark-up",
                    "type": "number",
                    "readOnly": true
                },
                "Fee": {
                    "format": "double",
                    "description": "Secondary market purchase fee paid to Bondora",
                    "type": "number"
                },
                "TotalCost": {
                    "format": "double",
                    "description": "Total amount paid for purchase",
                    "type": "number",
                    "readOnly": true
                },
                "OutstandingPayments": {
                    "format": "double",
                    "description": "Total amount still to be repaid by the borrower. This includes the principal balance, accrued interest and late charges as well as any future scheduled interest payments",
                    "type": "number"
                },
                "DesiredDiscountRate": {
                    "format": "double",
                    "description": "Discount rate percent",
                    "type": "number"
                },
                "Xirr": {
                    "format": "double",
                    "description": "XIRR (extended internal rate of return) is a methodology to calculate the net return using the loan issued date and amount, \r\n            loan repayment dates and amounts and the principal balance according to the original repayment date. \r\n            All overdue principal payments are written off immediately. No provisions for future losses are made and only received (not accrued or scheduled) \r\n            interest payments are taken into account.",
                    "type": "number"
                },
                "ListedOnDate": {
                    "format": "date-time",
                    "description": "Date when item was published",
                    "type": "string"
                },
                "DebtManagmentEvents": {
                    "description": "Webhook only:\r\n            Debt managment event collection",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DebtManagementEvent"
                    }
                },
                "LoanTransfers": {
                    "description": "Webhook only:\r\n            Collection of all loan payments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoanTransfer"
                    }
                },
                "ScheduledPayments": {
                    "description": "Webhook only:\r\n            Collection of all loan scheduled payments. \r\n            Contains previous period values before rescheduling was made",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledPayment"
                    }
                }
            }
        },
        "DebtManagementEvent": {
            "description": "Information about the Loan's debt management stage event history",
            "type": "object",
            "properties": {
                "CreatedOn": {
                    "format": "date-time",
                    "description": "Date of event",
                    "type": "string"
                },
                "EventType": {
                    "format": "int32",
                    "description": "Type of event",
                    "enum": [
                        1,
                        2,
                        7,
                        9,
                        14,
                        15,
                        16,
                        20,
                        22,
                        23,
                        24,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "type": "integer"
                },
                "Description": {
                    "description": "Type as a description, obsolete: use EventType",
                    "type": "string"
                }
            }
        },
        "LoanTransfer": {
            "type": "object",
            "properties": {
                "Date": {
                    "format": "date-time",
                    "description": "Payment date",
                    "type": "string"
                },
                "PrincipalAmount": {
                    "format": "double",
                    "description": "Principal amount",
                    "type": "number"
                },
                "InterestAmount": {
                    "format": "double",
                    "description": "Interest amount",
                    "type": "number"
                },
                "InterestAmountCarriedOver": {
                    "format": "double",
                    "description": "Interest carried over amount",
                    "type": "number"
                },
                "PenaltyAmountCarriedOver": {
                    "format": "double",
                    "description": "Penalty amount",
                    "type": "number"
                },
                "TotalAmount": {
                    "format": "double",
                    "description": "Total amount",
                    "type": "number"
                }
            }
        },
        "ScheduledPayment": {
            "description": "Scheduled payment item information",
            "type": "object",
            "properties": {
                "ScheduledDate": {
                    "format": "date-time",
                    "description": "Scheduled payment date",
                    "type": "string"
                },
                "PrincipalAmount": {
                    "format": "double",
                    "description": "Scheduled principal amount",
                    "type": "number"
                },
                "PrincipalAmountLeft": {
                    "format": "double",
                    "description": "Scheduled principal amount remaining after payment",
                    "type": "number"
                },
                "InterestAmount": {
                    "format": "double",
                    "description": "Scheduled interest amount",
                    "type": "number"
                },
                "IntrestAmountCarriedOver": {
                    "format": "double",
                    "description": "Interest amount carried over from rescheduling",
                    "type": "number"
                },
                "PenaltyAmountCarriedOver": {
                    "format": "double",
                    "description": "Penalty amount carried over from rescheduling",
                    "type": "number"
                },
                "TotalAmount": {
                    "format": "double",
                    "description": "Total payment amount",
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ApiResultLoanPartDetails": {
            "description": "Returns a single LoanPartDetails",
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/definitions/LoanPartDetails",
                    "description": "The payload of the response. Type depends on the API request."
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "LoanPartDetails": {
            "description": "LoanPart related data with summary, collection process and schedules",
            "type": "object",
            "properties": {
                "LoanPartId": {
                    "description": "LoanPart unique identifier",
                    "type": "string"
                },
                "Amount": {
                    "format": "double",
                    "description": "Investment amount",
                    "type": "number"
                },
                "AuctionId": {
                    "description": "Auction unique identifier",
                    "type": "string"
                },
                "AuctionName": {
                    "description": "Auction name",
                    "type": "string"
                },
                "AuctionNumber": {
                    "format": "int32",
                    "description": "Auction number",
                    "type": "integer",
                    "readOnly": true
                },
                "AuctionBidNumber": {
                    "format": "int32",
                    "description": "Auction bid number",
                    "type": "integer",
                    "readOnly": true
                },
                "InvestmentNumber": {
                    "type": "string"
                },
                "Country": {
                    "description": "Residency of the borrower",
                    "type": "string"
                },
                "CreditScore": {
                    "format": "double",
                    "description": "<para>\r\n  1000 No previous payments problems</para>\r\n<para>\r\n  900 Payments problems finished 24-36 months ago</para>\r\n<para>\r\n  800 Payments problems finished 12-24 months ago</para>\r\n<para>\r\n  700 Payments problems finished 6-12 months ago</para>\r\n<para>\r\n  600 Payment problems finished &lt;6 months ago</para>\r\n<para>\r\n  500 Active payment problems</para>",
                    "type": "number"
                },
                "CreditScoreEsMicroL": {
                    "description": "A score that is specifically designed for risk classifying subprime borrowers (defined by Equifax as borrowers that do not have access to bank loans). \r\n            A measure of the probability of default one month ahead.\r\n            <para>The score is given on a 10-grade scale, from the best score to the worst:</para><para>M1, M2, M3, M4, M5, M6, M7, M8, M9, M10</para>",
                    "type": "string"
                },
                "CreditScoreEsEquifaxRisk": {
                    "description": "Generic score for the loan applicants that do not have active past due operations in ASNEF.\r\n            A measure of the probability of default one year ahead. \r\n            The score is given on a 6-grade scale.\r\n            <para>AAA Very low</para><para>AA Low</para><para>A Average</para><para>B Average High</para><para>C High</para><para>D Very High</para>",
                    "type": "string"
                },
                "CreditScoreFiAsiakasTietoRiskGrade": {
                    "description": "Credit Scoring model for Finnish Asiakastieto\r\n            <para>RL1 Very low risk 01-20</para><para>RL2 Low risk 21-40</para><para>RL3 Average risk 41-60</para><para>RL4 Big risk 61-80</para><para>RL5 Huge risk 81-100</para>",
                    "type": "string"
                },
                "CreditScoreEeMini": {
                    "description": "Credit scoring for Estonian loans\r\n            <para>1000 No previous payments problems</para><para>900 Payments problems finished 24-36 months ago</para><para>800 Payments problems finished 12-24 months ago</para><para>700 Payments problems finished 6-12 months ago</para><para>600 Payment problems finished &lt;6 months ago</para><para>500 Active payment problems</para>",
                    "type": "string"
                },
                "Rating": {
                    "description": "Bondora Rating issued by the Rating model",
                    "type": "string"
                },
                "InitialInterest": {
                    "format": "double",
                    "description": "Initial interest rate",
                    "type": "number"
                },
                "Interest": {
                    "format": "double",
                    "description": "Current interest rate",
                    "type": "number"
                },
                "RescheduledInterest": {
                    "format": "double",
                    "description": "Interest rate after the loan was rescheduled",
                    "type": "number"
                },
                "UseOfLoan": {
                    "format": "int32",
                    "description": "Use of loan",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        -1
                    ],
                    "type": "integer"
                },
                "IncomeVerificationStatus": {
                    "format": "int32",
                    "description": "Income verification type",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "LoanId": {
                    "description": "Loan unique identifier",
                    "type": "string"
                },
                "LoanStatusCode": {
                    "format": "int32",
                    "description": "Loan status code\r\n            <para>2 Current</para><para>100 Overdue</para><para>5 60+ days overdue</para><para>4 Repaid</para><para>8 Released</para>",
                    "type": "integer"
                },
                "UserName": {
                    "description": "Borrower's username",
                    "type": "string"
                },
                "Gender": {
                    "format": "int32",
                    "description": "Borrower's Gender",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "DateOfBirth": {
                    "format": "date-time",
                    "description": "Borrower's date of birth",
                    "type": "string"
                },
                "SignedDate": {
                    "format": "date-time",
                    "description": "Loan issued date",
                    "type": "string"
                },
                "ReScheduledOn": {
                    "format": "date-time",
                    "description": "Last rescheduling date",
                    "type": "string"
                },
                "DebtOccuredOn": {
                    "format": "date-time",
                    "description": "Debt occured on date",
                    "type": "string"
                },
                "DebtOccuredOnForSecondary": {
                    "format": "date-time",
                    "description": "Debt occured on date",
                    "type": "string"
                },
                "LoanDuration": {
                    "format": "int32",
                    "description": "Loan original lenght",
                    "type": "integer"
                },
                "NextPaymentNr": {
                    "format": "int32",
                    "description": "Next scheduled payment number",
                    "type": "integer"
                },
                "NextPaymentDate": {
                    "format": "date-time",
                    "description": "Next scheduled payment date",
                    "type": "string"
                },
                "NextPaymentSum": {
                    "format": "double",
                    "description": "Next scheduled payment amount",
                    "type": "number"
                },
                "NrOfScheduledPayments": {
                    "format": "int32",
                    "description": "Total number of scheduled payments",
                    "type": "integer"
                },
                "LastPaymentDate": {
                    "format": "date-time",
                    "description": "Last scheduled payment date",
                    "type": "string"
                },
                "PrincipalRepaid": {
                    "format": "double",
                    "description": "Total principal repaid amount",
                    "type": "number"
                },
                "InterestRepaid": {
                    "format": "double",
                    "description": "Total interest repaid amount",
                    "type": "number"
                },
                "LateAmountPaid": {
                    "format": "double",
                    "description": "Total late charges paid amount",
                    "type": "number"
                },
                "PrincipalRemaining": {
                    "format": "double",
                    "description": "Remaining principal amount",
                    "type": "number",
                    "readOnly": true
                },
                "PrincipalLateAmount": {
                    "format": "double",
                    "description": "Principal debt amount",
                    "type": "number"
                },
                "InterestLateAmount": {
                    "format": "double",
                    "description": "Interest debt amount",
                    "type": "number"
                },
                "PenaltyLateAmount": {
                    "format": "double",
                    "description": "Late charges debt amount",
                    "type": "number"
                },
                "LateAmountTotal": {
                    "format": "double",
                    "description": "Late amount total",
                    "type": "number",
                    "readOnly": true
                },
                "PrincipalWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of principal written off",
                    "type": "number"
                },
                "InterestWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of interest written off",
                    "type": "number"
                },
                "PenaltyWriteOffAmount": {
                    "format": "double",
                    "description": "Total amount of penalty written off",
                    "type": "number"
                },
                "WriteOffTotal": {
                    "format": "double",
                    "description": "Write off total",
                    "type": "number",
                    "readOnly": true
                },
                "DebtServicingCostMainAmount": {
                    "format": "double",
                    "description": "Total amount of principal debt servicing cost",
                    "type": "number"
                },
                "DebtServicingCostInterestAmount": {
                    "format": "double",
                    "description": "Total amount of interest debt servicing cost",
                    "type": "number"
                },
                "DebtServicingCostPenaltyAmount": {
                    "format": "double",
                    "description": "Total amount of penalty debt servicing cost",
                    "type": "number"
                },
                "DebtServicingCostTotal": {
                    "format": "double",
                    "description": "Debt servicing cost total",
                    "type": "number",
                    "readOnly": true
                },
                "RepaidPrincipalCurrentOwner": {
                    "format": "double",
                    "description": "Total principal repaid amount to current note owner",
                    "type": "number"
                },
                "RepaidInterestsCurrentOwner": {
                    "format": "double",
                    "description": "Total interest repaid amount to current note owner",
                    "type": "number"
                },
                "LateChargesPaidCurrentOwner": {
                    "format": "double",
                    "description": "Late charges paid amount to current note owner",
                    "type": "number"
                },
                "RepaidTotalCurrentOwner": {
                    "format": "double",
                    "description": "Total repaid amount to current note owner",
                    "type": "number"
                },
                "TotalRepaid": {
                    "format": "double",
                    "description": "Total repaid amount",
                    "type": "number"
                },
                "DebtManagmentEvents": {
                    "description": "Debt managment event collection",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DebtManagementEvent"
                    }
                },
                "LoanTransfers": {
                    "description": "Collection of all loan payments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoanTransfer"
                    }
                },
                "ScheduledPayments": {
                    "description": "Collection of all loan scheduled payments. \r\n            Contains previous period values before rescheduling was made",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledPayment"
                    }
                }
            }
        },
        "LoanPartDetailsRequest": {
            "description": "Container for LoanPartDetails item ID's.",
            "type": "object",
            "properties": {
                "ItemIds": {
                    "description": "LoanPart ID's to list. Limited to 1000 items.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApiResultLoanPartDetailsList": {
            "description": "Returns a list of LoanPartDetails results",
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoanPartDetails"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "SecondMarketBuyRequest": {
            "description": "Buy loans from secondary market for the user.",
            "type": "object",
            "properties": {
                "ItemIds": {
                    "description": "Secondary market item ids to buy",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SecondMarketSaleRequest": {
            "description": "Secondary market sale request",
            "type": "object",
            "properties": {
                "Items": {
                    "description": "LoanParts to sell",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecondMarketSell"
                    }
                },
                "CancelItemOnPaymentReceived": {
                    "description": "Allows auto cancellation of loans on sale if they receive new repayments",
                    "type": "boolean"
                },
                "CancelItemOnReschedule": {
                    "description": "Allows auto cancellation of loans on sale if they are rescheduled",
                    "type": "boolean"
                }
            }
        },
        "SecondMarketSell": {
            "description": "Sell loan from secondary market.",
            "type": "object",
            "properties": {
                "LoanPartId": {
                    "description": "LoanPart unique identifier",
                    "type": "string"
                },
                "DesiredDiscountRate": {
                    "format": "int32",
                    "description": "Desired discount rate",
                    "maximum": 40,
                    "minimum": -100,
                    "type": "integer"
                }
            }
        },
        "ApiResultSecondMarketSale": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecondMarketSaleResponse"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "SecondMarketSaleResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Item unique identifier",
                    "type": "string"
                },
                "LoanPartId": {
                    "description": "Secondary market item unique identifier",
                    "type": "string"
                },
                "DesiredDiscountRate": {
                    "format": "int32",
                    "description": "Desired discount rate",
                    "maximum": 40,
                    "minimum": -100,
                    "type": "integer"
                }
            }
        },
        "SecondMarketCancelRequest": {
            "description": "Secondary market sale request",
            "type": "object",
            "properties": {
                "ItemIds": {
                    "description": "Secondary market item ids to cancel",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApiResultSecondMarketItemSummary": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/definitions/SecondMarketItemSummary",
                    "description": "The payload of the response. Type depends on the API request."
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        },
        "SecondMarketItemSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Item unique identifier",
                    "type": "string"
                },
                "Number": {
                    "format": "int32",
                    "description": "Number",
                    "type": "integer"
                },
                "StartDate": {
                    "format": "date-time",
                    "description": "Item start date",
                    "type": "string"
                },
                "PlannedCloseDate": {
                    "format": "date-time",
                    "description": "Planned close date",
                    "type": "string"
                },
                "ActualCloseDate": {
                    "format": "date-time",
                    "description": "Actual close date",
                    "type": "string"
                },
                "UserCancelledOn": {
                    "format": "date-time",
                    "description": "User cancelled on",
                    "type": "string"
                },
                "LoanPart_id": {
                    "description": "LoanPart being sold",
                    "type": "string"
                },
                "DesiredDiscountRate": {
                    "format": "double",
                    "description": "Discount rate percent",
                    "type": "number",
                    "readOnly": true
                },
                "DesiredDiscountRateDecimalFraction": {
                    "format": "double",
                    "description": "Discount rate as fraction (0.0 - 1.0)",
                    "type": "number"
                },
                "StatusCode": {
                    "format": "int32",
                    "description": "Current status code\r\n            <para>0 Created</para><para>1 Open in marketplace</para><para>2 Successfully sold</para><para>3 Failed</para>",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                }
            }
        },
        "SecondMarketListingRequest": {
            "description": "List of secondary market items to request info for.",
            "type": "object",
            "properties": {
                "ItemIds": {
                    "description": "Secondary market item ID's to list. Limited to 1000 items.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ApiResultSecondMarketItemSummaryList": {
            "required": [
                "Success"
            ],
            "type": "object",
            "properties": {
                "Payload": {
                    "description": "The payload of the response. Type depends on the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecondMarketItemSummary"
                    }
                },
                "Success": {
                    "description": "Indicates if the request was successfull or not.\r\n            true if the request was handled successfully, false otherwise.",
                    "type": "boolean"
                },
                "Errors": {
                    "description": "Error(s) accociated with the API request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiError"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "description": "OAuth2 Authorization Code Grant",
            "flow": "accessCode",
            "authorizationUrl": "https://www.bondora.com/oauth/authorize",
            "tokenUrl": "https://api.bondora.com/oauth/access_token",
            "scopes": {
                "Investments": "Get list of user investments",
                "BidsRead": "Get user bids",
                "BidsEdit": "Create or cancel bids",
                "SmSell": "Sell loans in Secondary Market",
                "SmBuy": "Buy loans from Secondary Market",
                "ReportCreate": "Allow to create new report(s)",
                "ReportRead": "Allow to view user's created report items and report details"
            }
        }
    },
    "security": [
        {
            "oauth2": [
            ]
        }
    ]
}